class AnimalDefinition extends PetDefinition{constructor(config){super(config),this.stats={...this.stats,wander_min:.1,wander_max:.2,speed:.02+.01*Math.random(),current_happiness:config.stats?.current_happiness??random(15,50),buff:config.stats?.buff||App.getRandomGameplayBuff()},this.lastStatsUpdate=config.lastStatsUpdate||Date.now()}getLifeStage(){return PetDefinition.LIFE_STAGE.baby}feed(amt){this.stats.current_happiness+=amt}increaseHappiness(amt){return this.feed(amt)}serialize(){return{...App.minimalizePetDef(this.serializeStats(!0)),lastStatsUpdate:this.lastStatsUpdate,stats:{current_happiness:this.stats.current_happiness,buff:this.stats.buff}}}handleStatsUpdate(){const now=Date.now(),delta=now-this.lastStatsUpdate;this.lastStatsUpdate=now;const happinessDecrease=925e-6*(delta/1e3);this.stats.current_happiness-=Math.abs(happinessDecrease),this.stats.current_happiness=clamp(this.stats.current_happiness,0,100)}getFullCSprite(noMargin){const margin=noMargin?0:10;return`<c-sprite width="16" height="16" index="0" src="${this.sprite}" pos-x="0" pos-y="0" style="margin-right: ${margin}px;"></c-sprite>`}getBuff(){return App.getGameplayBuffDefinitionFromKey(this.stats.buff)||App.definitions.gameplay_buffs.increasedWateredDuration}static calculateTimeToZero(decreaseRate){const timeToZeroMilliseconds=100/decreaseRate*1e3,duration=moment.duration(timeToZeroMilliseconds),hours=Math.floor(duration.asHours()),minutes=duration.minutes();console.log(`${hours}:${minutes}`)}}class Animal extends Pet{constructor(definition,additionalProps){super(definition,additionalProps),this.z=App.constants.ACTIVE_PET_Z,this.animalDefinition=this.petDefinition}async interactWith(other,interactionConfig={animation:randomFromArray(["cheering","shocked","blush","sitting","angry","kissing"]),length:random(2e3,5e3)}){other.stopMove(),other.triggerScriptedState("idle",1e4,!1,!0),this.stopMove(),other.inverted?this.targetX=other.x+this.spritesheet.cellSize:this.targetX=other.x-this.spritesheet.cellSize,this.targetY=other.y,await this.triggerScriptedState("moving",2e4,!1,!0,!1,Pet.scriptedEventDrivers.moveCheck.bind({pet:this})),this.inverted=!other.inverted,other.triggerScriptedState(interactionConfig.animation,interactionConfig.length,!1,!0),this.triggerScriptedState(interactionConfig.animation,interactionConfig.length,!1,!0)}getInteractionTarget(){return randomFromArray([...App.spawnedAnimals,App.pet].filter(a=>a!==this).filter(a=>!a.isDuringScriptedState()))}onDraw(){App.pet.setLocalZBasedOnSelf(this)}wander(){if(this.isMoving&&(this.nextRandomTargetSelect=0),this.nextRandomTargetSelect||(this.nextRandomTargetSelect=App.lastTime+1e3*random(this.stats.wander_min,this.stats.wander_max)),App.lastTime>this.nextRandomTargetSelect){if(this.handleAutomaticInteractions())return;this.targetX=random(this.drawer.getRelativePositionX(0),this.drawer.getRelativePositionX(100)-this.spritesheet.cellSize),random(0,4)||(this.targetX=App.pet.x-this.spritesheet.cellSize),this.targetY=this.getValidRandomYPosition(),this.nextRandomTargetSelect=0}}getValidRandomYPosition(minY){const sceneMinY=minY||App.currentScene.animalMinY||88;return random(this.drawer.getRelativePositionX(100)-this.spritesheet.cellSize/2,this.drawer.getRelativePositionX(sceneMinY)-this.spritesheet.cellSize)}handleAutomaticInteractions(){if(App.haveAnyDisplays())return!1;if(App.lastTime>(this.nextInteractionTime||0)){const interactionTarget=this.getInteractionTarget();if(interactionTarget)return this.nextInteractionTime=App.lastTime+random(1e4,3e4),interactionTarget.nextInteractionTime=App.lastTime+random(1e4,3e4),this.interactWith(interactionTarget),!0}return!1}handleRandomGestures(){if(random(0,100)<10){if(this.hasMoodlet("sleepy"))return this.triggerScriptedState("angry",4e3,random(2e4,3e4)),void this.stopMove();if(this.hasMoodlet("hungry")||this.hasMoodlet("bored"))return this.triggerScriptedState("uncomfortable",4e3,random(2e4,3e4)),void this.stopMove()}if(!["bored","sleepy","hungry","sick"].map(moodName=>this.hasMoodlet(moodName)).some(moodlet=>moodlet))if(random(0,100)<10){const commonAnimations=[{name:"sitting",length:random(2e3,4e3)},{name:"blush",length:random(550,1e3)},{name:"cheering",length:random(550,1e3)},{name:"shocked",length:random(450,800)}],rareAnimation=[{name:"sleeping",length:random(1e4,3e4)}],animation=randomFromArray([...commonAnimations,...commonAnimations,...commonAnimations,...commonAnimations,...commonAnimations,...commonAnimations,...commonAnimations,...commonAnimations,...rareAnimation]);this.triggerScriptedState(animation.name,animation.length,random(1e4,2e4)),this.stopMove()}else random(0,105)<3&&this.jump(.28,!0)}statsManager(){this.animalDefinition.handleStatsUpdate()}handleWants(){}sleep(){}}