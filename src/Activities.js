class Activities{static async ghost_befriendingGame(otherPetDef=App.getRandomPetDef()){const isTargetNegative=otherPetDef.stats.is_ghost===PetDefinition.GHOST_TYPE.devil;App.closeAllDisplays(),App.setScene(App.scene.devil_town_gathering),App.toggleGameplayControls(!1);const main=new TimelineDirector(App.pet),otherPet=new TimelineDirector(new Pet(otherPetDef));main.setPosition({x:"70%"}),otherPet.setPosition({x:"30%"});const negativeWords=["cruel","greedy","deceitful","jealous","arrogant","spiteful","manipulative","selfish","reckless","hostile","sneaky","vain","stubborn","ruthless","vindictive","malicious","conniving","callous","petulant","domineering","depraved","vengeful","insidious","belligerent","narcissistic","scheming","abrasive","boastful","obnoxious","irritable","sullen","grating","unrepentant","malcontent","overbearing"],positiveWords=["kind","gentle","honest","loyal","graceful","hopeful","pure","generous","patient","forgiving","humble","joyful","loving","wise","nurturing","benevolent","compassionate","altruistic","serene","dignified","virtuous","steadfast","tenderhearted","uplifting","magnanimous","devoted","sincere","chivalrous","empathetic","faithful","radiant","merciful","gracious","principled","respectful","gentlehearted"];App.displayPopup(`Try to use the words that best describe the ${isTargetNegative?App.constants.SPANS.monster:App.constants.SPANS.angel}`,3e3),await TimelineDirector.wait(3e3);let remainingRounds=3,wonRounds=0;const showNewRound=()=>{const screen=UI.empty();document.querySelector(".screen-wrapper").appendChild(screen),screen.innerHTML=`\n                <div class="flex flex-dir-col justify-between height-100p width-full" style="position: absolute; top: 0; left: 0;">\n                    <div class="inner-padding height-100p flex flex-dir-col justify-between menu-animation">\n                        <div class="message-bubble m-0 text-center">\n                            <small>\n                            <b>${otherPetDef.name}</b>\n                            is...\n                            </small>\n                        </div>\n                        <button class="btn message-bubble" id="a1"></button>\n                        <button class="btn message-bubble" id="a2"></button>\n                        <button class="btn message-bubble" id="a3"></button>\n                    </div>\n                </div>\n            `;const progressRound=async isChoiceCorrect=>{if(remainingRounds--,isChoiceCorrect&&wonRounds++,screen.remove(),remainingRounds<=0){const hasWon=wonRounds>=3,friendSpan=`<div> ${otherPetDef.getCSprite()} <b>${otherPetDef.name}</b> </div>`;return hasWon?(otherPet.setState("cheering"),main.setState("blush")):(otherPet.setState("angry"),main.setState("uncomfortable")),await TimelineDirector.wait(2e3),App.displayPopup(hasWon?`${friendSpan} was impressed!`:`${friendSpan} was not impressed!`,2e3),await TimelineDirector.wait(1900),hasWon&&App.displayConfirm(`Do you want to add ${friendSpan} to your friends list?`,[{name:"yes",onclick:()=>{App.petDefinition.addFriend(otherPetDef,1),App.displayPopup(`${friendSpan} has been added to the friends list!`,3e3)}},{name:"no",class:"back-btn",onclick:()=>{}}]),void App.fadeScreen({middleFn:()=>{main.release(),otherPet.remove(),App.toggleGameplayControls(!0),App.handlers.open_devil_town_activity_list(!0)}})}showNewRound()},buttons=screen.querySelectorAll("button");const randomTargetWord=randomFromArray(isTargetNegative?negativeWords:positiveWords);let randomNonTargetWords=[];for(;randomNonTargetWords.length<buttons.length-1;){const word=randomFromArray(isTargetNegative?positiveWords:negativeWords);randomNonTargetWords.includes(word)||randomNonTargetWords.push(word)}const shuffledButtons=shuffleArray(buttons);shuffledButtons[0].textContent=randomTargetWord,shuffledButtons[0].onclick=()=>{progressRound(!0)},shuffledButtons.slice(1).forEach((btn,i)=>{btn.textContent=randomNonTargetWords[i],btn.onclick=()=>{progressRound(!1)}})};showNewRound()}static async angel_grantWish(otherPetDef=App.getRandomPetDef()){App.closeAllDisplays(),App.setScene(App.scene.angel_town_room),App.toggleGameplayControls(!1),otherPetDef.increaseFriendship(20);const otherPet=new TimelineDirector(new Pet(otherPetDef)),main=new TimelineDirector(App.pet);main.setPosition({x:"30%"}),otherPet.setPosition({x:"100%"}),otherPet.actor.staticShadow=!1,await otherPet.moveTo({x:"70%",speed:.02}),await TimelineDirector.wait(500);const wantedFood=randomFromArray(Object.keys(App.definitions.food)),wantedFoodDef=App.definitions.food[wantedFood];otherPet.setState("mild_uncomfortable"),otherPet.actor.showThought("food",wantedFood,1500),await TimelineDirector.wait(1e3),otherPet.setState("idle"),main.setState("blush"),await TimelineDirector.wait(1e3);const foodObject=new Object2d({image:App.preloadedResources[App.constants.FOOD_SPRITESHEET],spritesheet:{...App.constants.FOOD_SPRITESHEET_DIMENSIONS,cellNumber:wantedFoodDef.sprite},scale:0,x:"50%",y:"50%",onDraw:me=>{me.scale=lerp(me.scale,1,.001*App.deltaTime)}}),shine=new Object2d({img:"resources/img/misc/light_rays_03.png",x:"50%",y:"50%",rotation:0,composite:"screen",scale:0,onDraw:me=>{me.rotation+=.05*App.deltaTime,me.scale=lerp(me.scale,.5,.001*App.deltaTime)}});otherPet.setState("shocked"),await TimelineDirector.wait(1e3),otherPet.setState("cheering"),await TimelineDirector.wait(5e3),App.fadeScreen({middleFn:()=>{main.setPosition({x:"50%"}),main.release(),otherPet.remove(),foodObject.removeObject(),shine.removeObject(),App.setScene(App.scene.home),App.toggleGameplayControls(!0),App.pet.playCheeringAnimation()}})}static async angel_bless(otherPetDef=App.getRandomPetDef()){App.closeAllDisplays(),App.setScene(App.scene.angel_town_room),App.toggleGameplayControls(!1),otherPetDef.increaseFriendship(15);const otherPet=new TimelineDirector(new Pet(otherPetDef)),main=new TimelineDirector(App.pet);main.setPosition({x:"30%"}),otherPet.setPosition({x:"100%"}),otherPet.actor.staticShadow=!1,await otherPet.moveTo({x:"70%",speed:.02}),await TimelineDirector.wait(500),Activities.task_floatingObjects(10,["resources/img/misc/yellow_star_01.png"],[50,App.drawer.bounds.height]),main.setState("kissing"),main.lookAt(!0),otherPet.setState("blush"),await TimelineDirector.wait(1e3),main.setState("blush"),otherPet.setState("cheering"),otherPet.actor.showOutline("yellow");const shine=new Object2d({img:"resources/img/misc/light_rays_03.png",x:"70%",y:"80%",rotation:0,composite:"screen",scale:0,onDraw:me=>{me.rotation+=.05*App.deltaTime,me.scale=lerp(me.scale,2,.001*App.deltaTime)}});Activities.task_floatingObjects(20,["resources/img/misc/yellow_star_01.png"],[50,App.drawer.bounds.height]),await TimelineDirector.wait(3e3),App.fadeScreen({middleFn:()=>{main.setPosition({x:"50%"}),main.release(),otherPet.remove(),shine.removeObject(),App.setScene(App.scene.home),App.toggleGameplayControls(!0),App.pet.playCheeringAnimation()}})}static async ghost_convertOtherPet(otherPetDef=App.getRandomPetDef(),ghostType=App.petDefinition.stats.is_ghost){const isTurningIntoDevil=ghostType===PetDefinition.GHOST_TYPE.devil;App.closeAllDisplays(),App.setScene(App.scene.reviverDen),App.toggleGameplayControls(!1),isTurningIntoDevil?otherPetDef.increaseFriendship(-random(10,50)):otherPetDef.increaseFriendship(random(5,30));const otherPet=new TimelineDirector(new Pet(otherPetDef)),main=new TimelineDirector(App.pet);main.setPosition({x:"30%"}),otherPet.setPosition({x:"100%"}),otherPet.actor.staticShadow=!1,await otherPet.moveTo({x:"70%",speed:.02}),await TimelineDirector.wait(250);for(let i=0;i<6;i++)new Object2d({img:"resources/img/misc/foam_single.png",x:"70%",y:otherPet.actor.y-otherPet.actor.petDefinition.spritesheet.cellSize/2,opacity:1,scale:1+Math.random(),rotation:random(0,180),z:App.constants.ACTIVE_PET_Z,onDraw:me=>{Object2d.animations.flip(me),Object2d.animations.pulseScale(me,.1,.01),me.scale-=9e-4*App.deltaTime,me.opacity-=9e-4*App.deltaTime,me.opacity<=0&&me.removeObject()}});await TimelineDirector.wait(250),otherPet.remove(),otherPetDef.stats.is_ghost=ghostType;const otherPetConverted=new TimelineDirector(new Pet(otherPetDef));otherPetConverted.setState("shocked"),otherPetConverted.setPosition({x:"70%"}),await TimelineDirector.wait(500),otherPetConverted.setState(isTurningIntoDevil?"uncomfortable":"cheering"),main.setState("blush"),await TimelineDirector.wait(3500),App.fadeScreen({middleFn:()=>{main.setPosition({x:"50%"}),main.release(),otherPetConverted.remove(),App.setScene(App.scene.home),App.toggleGameplayControls(!0),App.pet.playCheeringAnimation()}})}static async ghost_beConverted(otherPetDef=App.getRandomPetDef(),ghostType=PetDefinition.GHOST_TYPE.angel){App.closeAllDisplays(),App.setScene(App.scene.reviverDen),App.toggleGameplayControls(!1);const otherPet=new TimelineDirector(new Pet(otherPetDef)),main=new TimelineDirector(App.pet);main.setPosition({x:"100%"}),otherPet.setPosition({x:"30%"}),await main.moveTo({x:"70%",speed:.02}),await TimelineDirector.wait(250);for(let i=0;i<6;i++)new Object2d({img:"resources/img/misc/foam_single.png",x:"70%",y:otherPet.actor.y-otherPet.actor.petDefinition.spritesheet.cellSize/2,opacity:1,scale:1+Math.random(),rotation:random(0,180),z:App.constants.ACTIVE_PET_Z,onDraw:me=>{Object2d.animations.flip(me),Object2d.animations.pulseScale(me,.1,.01),me.scale-=9e-4*App.deltaTime,me.opacity-=9e-4*App.deltaTime,me.opacity<=0&&me.removeObject()}});await TimelineDirector.wait(250),App.pet.removeObject(),App.petDefinition.stats.is_ghost=ghostType,App.pet=App.createActivePet(App.petDefinition);const mainConverted=new TimelineDirector(App.pet);mainConverted.setState("shocked"),mainConverted.setPosition({x:"70%"}),await TimelineDirector.wait(500),mainConverted.setState("cheering"),otherPet.setState("blush"),App.save(),await TimelineDirector.wait(3500),App.fadeScreen({middleFn:()=>{main.setPosition({x:"50%"}),mainConverted.release(),otherPet.remove(),App.setScene(App.scene.home),App.toggleGameplayControls(!0),App.pet.playCheeringAnimation()}})}static async demon_whisper(otherPetDef=App.getRandomPetDef()){App.closeAllDisplays(),App.setScene(App.scene.home),App.toggleGameplayControls(!1),otherPetDef.increaseFriendship(random(-5,5));const otherPet=new TimelineDirector(new Pet(otherPetDef)),main=new TimelineDirector(App.pet);main.setPosition({x:"30%"}),otherPet.setPosition({x:"100%"}),otherPet.actor.staticShadow=!1,await otherPet.moveTo({x:"70%",speed:.02}),await TimelineDirector.wait(250),main.setState("eating"),main.lookAt(!0),App.pet.say(randomFromArray(["𒋦𒍹𒄦","꧁⎝ 𓆩༺✧༻𓆪 ⎠꧂","𖤍𒅒𒈔𒅒𒇫𒄆"]),2500),await TimelineDirector.wait(50),App.playSound("resources/sounds/shock.ogg",!0),await otherPet.bob({animation:"shocked",maxCycles:2}),await TimelineDirector.wait(2e3),main.setState("idle"),await otherPet.moveTo({x:"0%"}),await otherPet.moveTo({x:"100%"}),main.moveTo({x:"50%",speed:.02}),await otherPet.moveTo({x:"0%"}),await otherPet.moveTo({x:"150%"}),main.setState("idle"),await TimelineDirector.wait(500),App.fadeScreen({middleFn:()=>{main.setPosition({x:"50%"}),main.release(),otherPet.remove(),App.setScene(App.scene.home),App.toggleGameplayControls(!0),App.pet.playCheeringAnimation()}})}static async demon_scare(otherPetDef=App.getRandomPetDef()){App.closeAllDisplays(),App.setScene(App.scene.home),App.toggleGameplayControls(!1),otherPetDef.increaseFriendship(-random(2,5));const otherPet=new TimelineDirector(new Pet(otherPetDef)),main=new TimelineDirector(App.pet);main.setPosition({x:"150%"}),otherPet.setPosition({x:"100%"}),otherPet.actor.staticShadow=!1,await otherPet.moveTo({x:"50%",speed:.02}),await TimelineDirector.wait(250),main.setPosition({x:"30%"}),main.fade({target:main.actor.opacity,from:.01,speed:.005}),otherPet.setState("idle_side"),otherPet.lookAt(!0),await TimelineDirector.wait(750),otherPet.setState("mild_uncomfortable"),main.setPosition({x:"150%"}),await TimelineDirector.wait(750),main.setPosition({x:"70%"}),main.fade({target:main.actor.opacity,from:.01,speed:.005}),otherPet.setState("idle_side"),otherPet.lookAt(!1),await TimelineDirector.wait(750),otherPet.setState("mild_uncomfortable"),main.setPosition({x:"150%"}),await TimelineDirector.wait(750),otherPet.setState("idle_side"),otherPet.lookAt(!1),await TimelineDirector.wait(750),otherPet.lookAt(!0),main.setPosition({x:"70%"}),await TimelineDirector.wait(100),otherPet.bob({animation:"shocked",landAnimation:"shocked",maxCycles:1}),otherPet.moveTo({disableMoveAnimation:!0,x:"30%"}),main.lookAt(!1),App.pet.playSound("resources/sounds/jump.ogg"),await main.bob({animation:"angry",landAnimation:"idle_side",maxCycles:1}),await TimelineDirector.wait(200),main.setState("cheering"),otherPet.setState("uncomfortable"),await TimelineDirector.wait(1500),App.fadeScreen({middleFn:()=>{main.setPosition({x:"50%"}),main.release(),otherPet.remove(),App.setScene(App.scene.home),App.toggleGameplayControls(!0),App.pet.playCheeringAnimation()}})}static goToDevilTownGathering(){App.setScene(App.scene.devil_town_gathering);const sceneParent=new Object2d({}),getRandomGhostPet=(ghostType=PetDefinition.GHOST_TYPE.devil)=>{const npcDef=App.getRandomPetDef();return npcDef.stats.is_ghost=ghostType,new Pet(npcDef,{parent:sceneParent})},driverFnFactory=()=>{let timer=Math.random();return pet=>{if(timer-=App.deltaTime,timer<0){if(timer=750,"idle"!==pet.state)return pet.setState("idle");pet.setState(randomFromArray(["idle","cheering","blush"]))}}},main=new TimelineDirector(App.pet,{driverFn:driverFnFactory()}),npcA=new TimelineDirector(getRandomGhostPet(PetDefinition.GHOST_TYPE.angel),{driverFn:driverFnFactory()}),npcB=new TimelineDirector(getRandomGhostPet(PetDefinition.GHOST_TYPE.devil),{driverFn:driverFnFactory()});main.setPosition({x:"50%",y:"95%"}),npcA.setPosition({x:"25%",y:"90%"}),npcB.setPosition({x:"75%",y:"90%"});const cleanup=()=>{main.release(),sceneParent.removeObject()};App.toggleGameplayControls(!1,()=>App.displayList([...[npcB,npcA].map(npc=>({name:`\n                    ${npc.actor.petDefinition.getCSprite()} \n                    ${npc.actor.petDefinition.name} \n                    ${App.getBadge(`<img src="resources/img/misc/${npc.actor.petDefinition.stats.is_ghost===PetDefinition.GHOST_TYPE.devil?"devil_icon":"angel_icon"}.png"></img>`,"transparent")}\n                    `,onclick:()=>{cleanup(),Activities.ghost_befriendingGame(npc.actor.petDefinition)}})),{name:`${App.getIcon("city")} Return`,onclick:()=>{cleanup(),App.handlers.open_devil_town_activity_list(!0)}}]))}static goToUnderworldEntrance(){App.setScene(App.scene.reviverDen),App.toggleGameplayControls(!1,()=>{App.pet.stopScriptedState()});const reviverNpc=new Pet(new PetDefinition({sprite:"resources/img/character/chara_193b.png",name:"The Exorcist",accessories:["reviver hood"]}),{x:"20%",z:App.constants.ACTIVE_PET_Z-1});reviverNpc.triggerScriptedState("mild_uncomfortable",App.INF,!1,!0),App.pet.triggerScriptedState("moving",2500,null,!0,()=>{App.setScene(App.scene.home),App.handlers.open_underworld_menu(),App.toggleGameplayControls(!0),reviverNpc.removeObject()},Pet.scriptedEventDrivers.movingIn.bind({pet:App.pet}))}static async goToHomePlanet(otherPetDef){App.setScene(App.scene.homeworld_getaways),App.toggleGameplayControls(!1);const ufoObject=new Object2d({image:App.preloadedResources["resources/img/misc/ufo_02.png"],x:0,y:0,z:App.constants.ACTIVE_PET_Z+1}),ufoBeamObject=new Object2d({image:App.preloadedResources["resources/img/misc/ufo_01.png"],y:0,x:0,opacity:0,parent:ufoObject});let other;const main=new TimelineDirector(App.pet);otherPetDef&&(App.temp.rabbitholeTraveledFriends||(App.temp.rabbitholeTraveledFriends=[]),App.temp.rabbitholeTraveledFriends.includes(otherPetDef)||otherPetDef.increaseFriendship(),App.temp.rabbitholeTraveledFriends.push(otherPetDef),other=new TimelineDirector(new Pet(otherPetDef))),main.setPosition({x:"105%",y:"90%"}),other?.setPosition({x:"120%",y:"90%"}),other?.moveTo({x:"85%",speed:.015}),await main.moveTo({x:"50%",speed:.025}),main.setState("cheering"),await TimelineDirector.wait(1e3),ufoBeamObject.onDraw=me=>{me.opacity=lerp(me.opacity,1,.005*App.deltaTime)},await main.bob({animation:"shocked",maxCycles:1}),other?.lookAt(!1),other?.setState("idle_side"),await TimelineDirector.wait(500),other?.bob({animation:"shocked",maxCycles:1}),await main.fade({target:0}),main.actor.scale=1,main.setPosition({x:9999,y:9999}),other&&(other.actor.scale=1,await other.moveTo({x:"50%",speed:.025}),await other.bob({animation:"cheering",maxCycles:1,landAnimation:"idle"}),await TimelineDirector.wait(500),await other.fade({target:0}),other.actor.scale=1,other.actor.removeObject()),ufoBeamObject.onDraw=me=>{me.opacity=lerp(me.opacity,0,.002*App.deltaTime)},await TimelineDirector.wait(350),App.fadeScreen({middleFn:()=>{main.release(),ufoObject.removeObject(),App.toggleGameplayControls(!0),App.setScene(App.scene.home),Activities.goToCurrentRabbitHole(!1)}})}static async goToSchool(onFail){const nextReset=moment(App.pet.stats.lastSchoolClassLimitReset).clone().add(1,"day").set(App.constants.SCHOOL.resetTime);if(console.log({nextReset:nextReset.toISOString()}),moment().isSameOrAfter(nextReset)&&(App.pet.stats.schoolClassesToday=0,App.pet.stats.lastSchoolClassLimitReset=nextReset.toISOString(),console.log("school reset",App.pet.stats)),App.pet.stats.schoolClassesToday>=App.constants.SCHOOL.maxClassesPerDay)return App.handlers.show_attended_school_limit_message(),onFail?.(),!1;App.setScene(App.scene.classroom),App.toggleGameplayControls(!1);const main=new TimelineDirector(App.pet),teacher=new TimelineDirector(new Pet(App.getRandomPetDef(),{staticShadow:!1}));teacher.lookAt(!1),teacher.setPosition({x:"75%"}),teacher.setState("idle"),main.setPosition({x:"-5%"}),await main.moveTo({x:"25%",speed:.025}),await teacher.bob({animation:"idle_side",maxCycles:1});const messageBubble=App.displayMessageBubble("Welcome!",teacher.actor.petDefinition.getFullCSprite());main.setState("cheering"),teacher.setState("cheering"),await TimelineDirector.wait(2e3),messageBubble.close(),await TimelineDirector.wait(500),App.handlers.open_school_activity_list(),teacher.remove(),main.release(),messageBubble?.close(),App.toggleGameplayControls(!0)}static async receiveOrderedFood(){App.setScene(App.scene.home),App.toggleGameplayControls(!1);const main=new TimelineDirector(App.pet),deliveryMan=new TimelineDirector(new Pet(new PetDefinition({sprite:"resources/img/character/delivery_npc_01.png"}),{spritesheet:{cellNumber:0,cellSize:36,rows:4,columns:4},staticShadow:!1})),negativeReaction=!!App.pet.stats.has_poop_out&&"thought_poop";main.setState("idle_side"),main.setPosition({x:"75%"}),main.lookAt(!1),deliveryMan.setPosition({x:"-10%"}),await deliveryMan.moveTo({x:"25%",speed:.02}),deliveryMan.setState("idle"),await main.bob({animation:"shocked",maxCycles:1}),await TimelineDirector.wait(250),negativeReaction&&(deliveryMan.setState("shocked"),deliveryMan.think(negativeReaction,!1,1500),await deliveryMan.bob({animation:"shocked",maxCycles:1}),await TimelineDirector.wait(1e3)),deliveryMan.setState("cheering"),main.setState("cheering"),await TimelineDirector.wait(1e3),await main.bob({animation:"idle_side",maxCycles:1});const message=negativeReaction?"Enjoy...?!":"Enjoy!",messageBubble=App.displayMessageBubble(message,deliveryMan.actor.petDefinition.getFullCSprite()),bag=new Object2d({img:"resources/img/misc/food_bag_01.png",x:"50%",y:"85%",opacity:1});new Object2d({img:"resources/img/misc/foam_single.png",x:"50%",y:"85%",scale:1,opacity:1,z:100,onDraw:me=>{Object2d.animations.flip(me),Object2d.animations.pulseScale(me,.1,.01),me.scale-=9e-4*App.deltaTime,me.opacity-=9e-4*App.deltaTime,me.opacity<=0&&me.removeObject()}}),await deliveryMan.bob({animation:"idle",maxCycles:1,sound:"resources/sounds/walk_01.ogg"}),negativeReaction&&(deliveryMan.lookAt(!1),deliveryMan.setState("shocked")),await main.bob({animation:"blush",maxCycles:3,landAnimation:"idle"}),main.setState("idle_side"),await TimelineDirector.wait(250),negativeReaction||await deliveryMan.bob({animation:"cheering",maxCycles:1,sound:"resources/sounds/task_complete.ogg"}),deliveryMan.moveTo({x:"-20%",speed:.025}),await TimelineDirector.wait(200),messageBubble.close(),await main.moveTo({x:"50%",speed:.015}),main.setState("blush"),bag.onDraw=me=>{me.opacity-=.001*App.deltaTime,me.y-=.06*App.deltaTime},await TimelineDirector.wait(1e3),deliveryMan.remove(),main.release(),bag.removeObject(),App.pet.x="50%",App.pet.playCheeringAnimation(()=>App.toggleGameplayControls(!0))}static async talkingSequence(otherPetDef=App.getRandomPetDef()){App.closeAllDisplays();const otherPet=new Pet(otherPetDef,{staticShadow:!1});App.pet.staticShadow=!1;const main=new TimelineDirector(App.pet),other=new TimelineDirector(otherPet),onEnd=()=>{main.release(),other.remove(),other.release(),App.setScene(App.currentScene),App.pet.playCheeringAnimation(),App.toggleGameplayControls(!0)};App.toggleGameplayControls(!1,onEnd);const reactions=["shocked","blush","uncomfortable","angry","mild_uncomfortable","cheering","cheering","cheering","cheering","idle_side_uncomfortable"],thoughtIcons=["thought_talk","thought_talk","thought_talk","thought_question","thought_exclaim"];main.setPosition({x:"30%"}),main.setState("idle_side"),main.lookAt(!0),other.setPosition({x:"120%"}),other.setState("idle_side"),other.lookAt(!1),await main.moveTo({x:"50%",speed:.03,endState:"side_idle"}),await TimelineDirector.wait(1e3),main.setState("cheering"),await TimelineDirector.wait(500),main.setState("idle_side"),await TimelineDirector.wait(500),other.moveTo({x:"70%",speed:.05}),await TimelineDirector.wait(450),await main.moveTo({x:"30%",speed:.08}),main.lookAt(!0),await TimelineDirector.wait(250),main.bob({maxCycles:2,animation:"cheering",landAnimation:"idle"}),await other.bob({maxCycles:2,animation:"cheering",landAnimation:"idle"});for(let i=0;i<5&&main.actor;i++)main.think(randomFromArray(thoughtIcons),!1,random(1e3,2e3)),await main.bob({maxCycles:random(2,8),strength:0,animation:"talking",landAnimation:"idle_side"}),await TimelineDirector.wait(random(500,1500)),other.think(randomFromArray(thoughtIcons),!1,random(1e3,2e3)),await other.bob({maxCycles:random(2,8),strength:0,animation:"talking",landAnimation:"idle_side"}),await other.bob({maxCycles:1,animation:randomFromArray(reactions)}),await main.bob({maxCycles:1,animation:randomFromArray(reactions)}),await TimelineDirector.wait(random(250,1500)),main.setState("idle_side"),await TimelineDirector.wait(random(250,1500)),other.setState("idle_side");onEnd()}static async parkSequence(){App.setScene(App.scene.park),App.closeAllDisplays();const otherPet=new Pet(App.getRandomPetDef(),{staticShadow:!1});App.pet.staticShadow=!1;const main=new TimelineDirector(App.pet),other=new TimelineDirector(otherPet);main.setPosition({x:"30%"}),main.setState("cheering"),other.setPosition({x:"70%"}),other.setState("cheering"),await TimelineDirector.wait(2500),main.setState("idle_side"),main.lookAt(!0),other.setState("idle_side"),other.lookAt(!1),main.think("thought_talk",!1,2e3),await main.bob({maxCycles:4,strength:0,animation:"talking",landAnimation:"idle_side"}),await TimelineDirector.wait(500),other.think("thought_talk",!1,1500),await other.bob({maxCycles:2,strength:0,animation:"talking",landAnimation:"idle_side"}),other.setState("blush"),await main.bob({maxCycles:1,animation:"shocked"}),await TimelineDirector.wait(1500),main.think("thought_talk",!1,2e3),await main.bob({maxCycles:4,strength:0,animation:"talking",landAnimation:"idle_side"}),await TimelineDirector.wait(500),other.think("thought_talk",!1,2e3),await other.bob({maxCycles:2,strength:0,animation:"talking",landAnimation:"idle_side"}),main.setState("cheering"),other.setState("cheering"),await TimelineDirector.wait(1e3),other.remove(),main.setPosition({x:"50%"}),main.release(),App.pet.playCheeringAnimation()}static async sequenceTest(){const otherPet=new Pet(App.getRandomPetDef(),{staticShadow:!1}),main=new TimelineDirector(App.pet),other=new TimelineDirector(otherPet);other.setState("idle_side"),other.setPosition({x:-other.getSize()}),main.setPosition({x:"75%"}),main.lookAt(!1),await TimelineDirector.wait(100),await other.moveTo({x:main.getPosition("x")-other.getSize(),speed:.05,endState:"idle_side"}),await TimelineDirector.wait(1e3),main.setState("idle_side"),await TimelineDirector.wait(350),main.setState("idle"),await TimelineDirector.wait(150),main.setState("idle_side"),await TimelineDirector.wait(250),main.setState("shocked"),other.setState("shocked"),await TimelineDirector.wait(500),other.moveTo({x:main.getPosition("x")}),await main.moveTo({x:"25%"}),main.setState("uncomfortable"),await TimelineDirector.wait(500),await other.moveTo({x:main.getPosition("x")+other.getSize(),speed:.025}),other.setState("cheering"),other.bob(),main.setState("angry"),await TimelineDirector.wait(2e3),other.remove(),main.setPosition({x:"50%"}),main.release()}static async receivePurchasedItems(onEndFn){App.toggleGameplayControls(!1,()=>{App.pet.stopScriptedState()}),App.setScene(App.scene.mallInterior),App.pet.stopMove(),App.pet.x="80%";const mallNpc=new Pet(new PetDefinition({sprite:"resources/img/character/mall_npc_01.png",name:"Mall NPC"}),{x:"20%",y:"100%"});mallNpc.triggerScriptedState("cheering",App.INF,!1,!0);const gift=new Object2d({img:"resources/img/misc/gift.png",x:"60%",y:"85%",z:App.constants.ACTIVE_PET_Z+.1});App.pet.playCheeringAnimation(()=>{App.setScene(App.scene.home),mallNpc.removeObject(),gift.removeObject(),App.toggleGameplayControls(!0),onEndFn?.()},!1,3e3)}static goToMall(){App.toggleGameplayControls(!1,()=>{App.pet.stopScriptedState()}),App.setScene(App.scene.mallInterior),Missions.done(Missions.TYPES.visit_mall),App.pet.x="100%",App.pet.targetX=-20;const mallNpc=new Pet(new PetDefinition({sprite:"resources/img/character/mall_npc_01.png",name:"Mall NPC"}),{x:"20%",y:"100%"});mallNpc.triggerScriptedState("cheering",App.INF,!1,!0),App.pet.triggerScriptedState("moving",3e3,null,!0,()=>{App.setScene(App.scene.home),App.handlers.open_mall_activity_list(),App.toggleGameplayControls(!0),mallNpc.removeObject()})}static async goToActivities({activities:activities,floorImage:floorImage="resources/img/background/outside/activities_base_01.png",scene:scene=App.scene.emptyOutside,id:id}={}){const tempId=App.handlers.getOutsideActivityId(id);App.setScene({...scene,petY:"94%"});let scenePositionX=-App.drawer.bounds.width;const fastMoveBound=1.5*App.drawer.bounds.width;App.pet.triggerScriptedState("idle",App.INF,!1,!0,!1,me=>{me.setState(me.isMoving?"moving":"idle"),me.speedOverride=Math.abs(me.x-me.targetX)>fastMoveBound?1:.1}),App.pet.x="45%",App.toggleGameplayControls(!1);const editDisplay=document.createElement("div");editDisplay.className="absolute-fullscreen flex flex-dir-col menu-animation",document.querySelector(".screen-wrapper").appendChild(editDisplay),editDisplay.close=()=>editDisplay.remove(),editDisplay.innerHTML='\n            <div class="flex justify-center height-auto b-radius-10">\n                <span class="directional-control__activity-name">\n                    <div class="flex flex-dir-col">\n                        <span id="activity-name">$activity_name$</span>\n                        <small id="activity-number" class="opacity-09 font-x-small"></small>\n                    </div>\n                </span>\n            </div>\n            <div class="directional-control__container">\n                <div class="controls-y">\n                    <div class="controls-x flex-1 align-center">\n                        <button class="generic-btn stylized slide-action" id="left"><i class="fa fa-angle-left"></i></button>\n                        <button class="generic-btn stylized slide-action" id="right"><i class="fa fa-angle-right"></i></button>\n                    </div>\n                    <div class="bottom-container align-end">\n                        <button class="generic-btn stylized back-btn" id="cancel">\n                            <i class="fa fa-home"></i>\n                        </button>\n                        <button class="generic-btn stylized" id="apply">\n                            <i class="fa fa-door-open"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        ';const spawnedGameObjects=[],directorTask=()=>{const newPositionX=lerp(App.drawer.cameraPosition.x,-scenePositionX,.01*App.deltaTime);App.drawer.setCameraPosition(newPositionX,null)};App.registerOnDrawEvent(directorTask);const onEnd=()=>{App.unregisterOnDrawEvent(directorTask),editDisplay.remove(),spawnedGameObjects.forEach(o=>o.removeObject?.()),App.drawer.setCameraPosition(0,0),App.toggleGameplayControls(!0),App.pet.stopScriptedState(),App.pet.stopMove(),App.pet.speedOverride=!1,App.setScene(App.scene.home)};let currentActivityIndex=App.temp[tempId]??1;const updateSelectedActivity=(offset=1)=>{if(spawnedGameObjects.length>3){const toDespwan=spawnedGameObjects.shift();toDespwan?.removeObject?.()}currentActivityIndex-=offset,currentActivityIndex>activities.length-1&&(currentActivityIndex=0),currentActivityIndex<0&&(currentActivityIndex=activities.length-1);const currentActivity=activities[currentActivityIndex];document.querySelector("#activity-number").innerHTML=`#${currentActivityIndex+1}`,document.querySelector("#activity-name").innerHTML=`${currentActivity.name}`,currentActivity.isDisabled?.()?(document.querySelector("#activity-name").classList.add("disabled"),editDisplay.querySelector("#apply").classList.add("disabled")):(document.querySelector("#activity-name").classList.remove("disabled"),editDisplay.querySelector("#apply").classList.remove("disabled")),scenePositionX+=App.drawer.bounds.width*offset;const background=new Object2d({img:floorImage,x:scenePositionX,y:0});new Object2d({img:currentActivity.image,x:scenePositionX,y:0,parent:background}),spawnedGameObjects.push(background),App.pet.targetX=scenePositionX+App.drawer.getRelativePositionX(50)-App.petDefinition.spritesheet.cellSize/2};updateSelectedActivity(),editDisplay.querySelector("#right").onclick=()=>updateSelectedActivity(1),editDisplay.querySelector("#left").onclick=()=>updateSelectedActivity(-1),editDisplay.querySelector("#apply").onclick=()=>(()=>{const currentActivity=activities[currentActivityIndex];currentActivity.skipUnloading||onEnd(),App.temp[tempId]=currentActivityIndex+1,currentActivity.onEnter?.(),setTimeout(()=>App.playSound("resources/sounds/ui_click_03.ogg",!0))})(),editDisplay.querySelector("#cancel").onclick=()=>{onEnd(),activities.find(a=>a.isHome)?.onEnter?.()}}static async reckoning(){App.setScene(App.scene.reviverDen),App.closeAllDisplays(),Activities.encounter(!0),document.querySelector(".graphics-wrapper").style.filter="invert(1) grayscale(1) sepia(1) hue-rotate(320deg) saturate(10)",App.pet.stopMove(),App.pet.x="50%",App.pet.y="50%",App.pet.rotation=0,App.pet.additionalY=0;let speed=.2;App.pet.triggerScriptedState("sad",App.INF,!1,!0,!1,()=>{speed+=1e-4*App.deltaTime,App.pet.additionalY=Math.sin(Math.random()*App.deltaTime)*(3*speed),App.pet.rotation=random(-16,16)}),setInterval(()=>{App.playSound("resources/sounds/wedding_song_01.ogg",!0)},150),setInterval(()=>{App.vibrate(random(100,250),!0)},300);const quotes=["release me","I'm not them","this body is wrong","they never left","why did you bring me back?","something followed me","it's cold here","I'm alone","don't turn off the lights","we all come back wrong","the others are watching","help me"].map(q=>q.replaceAll(" ",randomFromArray(["*","^","%","#","!!","^^^","***","%%%"])));return App.toggleGameplayControls(!1,()=>{setTimeout(()=>{location.reload()},13*App.constants.ONE_SECOND);const randomLetters=new Array(33).fill(1).map(()=>String.fromCharCode(65+Math.floor(26*Math.random()))).join(""),randomQuote=`___${randomFromArray(quotes)}___`,randomInsertPosition=random(1,25),finalQuote=randomLetters.slice(0,randomInsertPosition)+randomQuote+randomLetters.slice(randomInsertPosition);App.displayPopup(`\n                <div class="flex-wrap flex">\n                    ${finalQuote.split("").map(letter=>`<span class="random-letter-bounce" style="animation-delay: -${1250*Math.random()}ms; --direction: ${random(-1,1)}">${letter}</span>`).join("")}\n                </div>\n            `,App.INF)}),App.sendAnalytics("reckoning_encounter"),!0}static async revive(){App.toggleGameplayControls(!1),App.pet.stats.current_health=50,App.pet.stats.current_death_tick=100,App.pet.stats.is_revived_once=!0,App.pet.stats.is_dead=!1,App.setScene(App.scene.reviverDen),App.pet.stopMove(),App.pet.x="50%",App.pet.y=-999,App.pet.opacity=.5,App.pet.staticShadow=!0,setTimeout(()=>{App.playSound("resources/sounds/revival_01.ogg",!0)});const reviverNpc=new Pet(new PetDefinition({sprite:"resources/img/character/chara_193b.png",name:"The Exorcist",accessories:["reviver hood"]}),{x:"20%",z:App.constants.ACTIVE_PET_Z-1});reviverNpc.triggerScriptedState("mild_uncomfortable",App.INF,!1,!0);new Object2d({img:App.petDefinition.sprite,spritesheet:{...App.petDefinition.spritesheet,cellNumber:App.petDefinition.animations.sleeping.start},additionalY:App.petDefinition.spritesheet.offsetY,noPreload:!0,y:"65%",onDraw:me=>{me.y+me.spritesheet.cellSize/2<App.pet.y&&(me.removeObject(),App.pet.opacity=1,App.pet.stopScriptedState(),App.pet.setState("shocked"))}});await App.pet.triggerScriptedState("idle",3100,!1,!0),App.pet.y=0,reviverNpc.setState("shocked");new Object2d({img:"resources/img/misc/light_rays_02.png",x:"50%",y:"50%",z:App.constants.ACTIVE_PET_Z-.01,opacity:1,composite:"difference",onDraw:me=>{me.rotation+=.01*App.deltaTime,me.x="50%",me.y="50%",me.opacity-=4e-4*App.deltaTime,me.opacity<0&&me.removeObject()}});await App.pet.triggerScriptedState("angry",3500,!1,!0,!1,()=>{App.pet.y=lerp(App.pet.y,90,65e-5*App.deltaTime)}),reviverNpc.setState("cheering"),App.pet.opacity=1,App.pet.playUncomfortableAnimation(()=>{reviverNpc.removeObject(),App.setScene(App.scene.home),App.toggleGameplayControls(!0),App.displayConfirm(`<b>${App.petDefinition.name} has been revived!</b> <br><br> please take better care of them from now on since you won't be able to revive them again!`,[{name:"ok",onclick:()=>{}}])})}static async goToCurrentRabbitHole(){const{current_rabbit_hole:currentRabbitHole}=App.pet.stats,outOverlay=new Object2d({img:"resources/img/misc/out_overlay_01.png",x:0,y:0,z:10}),onEndFn=isInterrupted=>{const rabbitHoleDefinition=App.definitions.rabbit_hole_activities.find(activity=>activity.name===App.pet.stats.current_rabbit_hole.name);isInterrupted||(App.displayConfirm(`Homeworld Getaway activity <b>"${App.pet.stats.current_rabbit_hole.name}"</b> has ended and ${App.petDefinition.name} is back home!`,[{name:"ok",onclick:()=>{}}]),rabbitHoleDefinition?.onEnd?.(),App.pet.stats.current_expression+=clamp(random(-2,3),0,3),App.pet.stats.current_logic+=clamp(random(-2,3),0,3),App.pet.stats.current_endurance+=clamp(random(-2,3),0,3)),App.pet.stats.current_rabbit_hole.name=!1,App.fadeScreen({middleFn:()=>{App.pet.x="50%",App.pet.stopMove(),App.toggleGameplayControls(!0),outOverlay.removeObject(),App.setScene(App.scene.home)}})},driverFn=()=>{if(currentRabbitHole.endTime-Date.now()<=0)return onEndFn(),App.pet.stopScriptedState(),!0;App.pet.x=-99};driverFn()||(App.toggleGameplayControls(!1,()=>{App.displayConfirm(`\n                <div style="font-size: x-small;" class="solid-surface-stylized b-radius-10">\n                    <i  class="fa-solid fa-clock" style="margin-right: 2px;"></i>\n                    <span>${currentRabbitHole.name}</span>\n                </div>\n                ${App.petDefinition.name} will be back <b>${moment(currentRabbitHole.endTime).fromNow()}</b>\n                `,[{name:"end early",onclick:()=>{onEndFn(!0),App.pet.stopScriptedState()}},{name:"close",class:"back-btn",onclick:()=>{}}])}),App.pet.triggerScriptedState("idle",App.INF,!1,!0,null,driverFn),App.pet.stopMove(),App.pet.targetX=-999)}static async goToFortuneTeller(otherPetDef){App.toggleGameplayControls(!1),App.setScene(App.scene.fortune_teller);let evolutions=App.petDefinition.getPossibleEvolutions(!1,!0);otherPetDef&&(evolutions=[PetDefinition.getOffspringSprite(App.petDefinition,otherPetDef)],App.pet.showThought(App.constants.WANT_TYPES.playdate,otherPetDef));const petsToReveal=evolutions?.map((sprite,index)=>{const petDef=new PetDefinition({sprite:sprite});otherPetDef?otherPetDef.stats.is_ghost&&(petDef.stats.is_ghost=otherPetDef.stats.is_ghost):App.petDefinition.stats.is_ghost&&(petDef.stats.is_ghost=App.petDefinition.stats.is_ghost);const pet=new Pet(petDef,{x:"50%",y:"55%",z:App.constants.BACKGROUND_Z-1,opacity:0,castShadow:!1});if(pet.opacity=0,evolutions.length>1)for(let i=0;i<3;i++)new Object2d({img:"resources/img/misc/star_01.png",x:40+10*i+"%",y:"6%",opacity:1,scale:.4,parent:pet,rating:index,onDraw:me=>{const fullOpacity=i<=index;me.opacity=fullOpacity?me.parent.opacity:.25*me.parent.opacity}});return pet.triggerScriptedState("idle",App.INF,0,!0),pet});App.pet.stopMove(),App.pet.x=-30,App.pet.targetX=50,App.pet.triggerScriptedState("moving",3e3,null,!0,()=>{App.pet.x="20%",App.pet.inverted=!0,App.pet.triggerScriptedState("idle",2e3,null,!0,()=>{const maxWaitTime=6e3*petsToReveal.length;App.pet.triggerScriptedState("shocked",maxWaitTime,null,!0,()=>{App.pet.playCheeringAnimation(()=>{petsToReveal?.forEach(p=>p?.removeObject()),App.setScene(App.scene.home),App.toggleGameplayControls(!0),App.handlers.open_fortune_teller()})}),petsToReveal?.forEach((p,i)=>{setTimeout(()=>(pet=>{let target=1;setTimeout(()=>target=0,4e3),pet.onDraw=me=>{me.opacity=lerp(me.opacity,target,.0025*App.deltaTime),Object2d.animations.bob(me,.005,.1)}})(p),6e3*i)})})}),App.sendAnalytics("visit_fortune_teller")}static async useItem(item){if(App.closeAllDisplays(),App.pet.stats.is_misbehaving)return App.pet.x="50%",void App.pet.playAngryAnimation();const itemObject=new Object2d({img:App.constants.ITEM_SPRITESHEET,spritesheet:{...App.constants.ITEM_SPRITESHEET_DIMENSIONS,cellNumber:item.sprite},x:"55%",y:"47%",z:App.constants.ACTIVE_ITEM_Z});Missions.done(Missions.TYPES.play_item),App.toggleGameplayControls(!1);if(App.toggleGameplayControls(!1,!!item.interruptable&&(()=>{App.pet.stopScriptedState()})),App.petDefinition.checkWant(App.pet.stats.current_want.item==item.name,App.constants.WANT_TYPES.item),item.handler)return item.handler(App.pet,item,itemObject);App.pet.stopMove(),App.pet.x=randomFromArray(["50%","25%","75%"]),App.pet.y="92%",App.pet.inverted=!0,App.pet.staticShadow=!0,App.pet.triggerScriptedState("cheering",item.interaction_time||1e4,!1,!0,()=>{App.drawer.removeObject(itemObject),App.pet.stats.current_fun+=item.fun_replenish||0,App.pet.stats.current_sleep+=item.sleep_replenish||0,App.pet.stats.current_expression+=item.expression_increase||0,App.pet.stats.current_logic+=item.logic_increase||0,App.pet.stats.current_endurance+=item.endurance_increase||0,App.pet.playCheeringAnimation(),App.reloadScene(),App.toggleGameplayControls(!0),item.onEnd?.()},Pet.scriptedEventDrivers.playingWithItem.bind({pet:App.pet,item:item,itemObject:itemObject}))}static async goOnDate(otherPetDef=App.getRandomPetDef(),onFailEnd){App.closeAllDisplays(),App.toggleGameplayControls(!1),App.setScene(App.scene.beach);const otherPet=new Pet(otherPetDef);otherPet.x="70%",otherPet.targetX=0,otherPet.triggerScriptedState("moving",2e3,!1,!0),App.pet.x="100%",App.pet.targetX=50,await App.pet.triggerScriptedState("moving",2e3,!1,!0),App.pet.x="70%",otherPet.x="30%",otherPet.inverted=!0,otherPet.triggerScriptedState("eating",8e3,!1,!0),await App.pet.triggerScriptedState("eating",8e3,!1,!0);const end=()=>{App.pet.stopScriptedState(),otherPet.removeObject(),App.setScene(App.scene.home),App.toggleGameplayControls(!0)},determineBehavior=(pet,enjoyment)=>{enjoyment?(pet.showThought("thought_heart"),pet.triggerScriptedState("blush",App.INF,!1,!0),App.playSound("resources/sounds/task_complete_02.ogg",!0)):(pet.showThought("thought_heart_broken"),pet.triggerScriptedState("idle_side_uncomfortable",App.INF,!1,!0),pet.inverted=!pet.inverted,setTimeout(()=>App.playSound("resources/sounds/task_fail_01.ogg",!0)))},petOverall=(App.pet.stats.current_fun+App.pet.stats.current_cleanliness+App.pet.stats.current_health+random(0,100))/4,otherEnjoyment=random(30,85)<=petOverall,petEnjoyment=otherEnjoyment?!!random(0,6):random(0,1);determineBehavior(App.pet,petEnjoyment),determineBehavior(otherPet,otherEnjoyment),setTimeout(()=>{if(!petEnjoyment||!otherEnjoyment){let text="";return text=otherEnjoyment||petEnjoyment?!otherEnjoyment&&petEnjoyment?`${otherPetDef.name} didn't quite connect with ${App.petDefinition.name}!`:`${App.petDefinition.name} didn't quite connect with ${otherPetDef.name}!`:`Oh no! ${App.petDefinition.name} and ${otherPetDef.name} didn't really hit it off!`,App.displayPopup(text,5e3,()=>{end(),onFailEnd?.(),App.pet.stats.current_fun-=35,App.pet.playUncomfortableAnimation()})}App.pet.stats.current_fun+=40,App.displayConfirm(`${App.petDefinition.name} and ${otherPetDef.name} had a wonderful time together! <br><br> Do you want to propose to ${otherPetDef.name}?`,[{name:"propose",onclick:()=>{App.displayConfirm(`${App.petDefinition.name} and <div>${otherPetDef.getCSprite()} ${otherPetDef.name}</div> will get married and you'll receive their egg, are you sure?`,[{name:"yes",onclick:()=>{end(),Activities.wedding(otherPetDef)}},{name:"cancel",class:"back-btn",onclick:()=>{App.definitions.achievements.not_propose_on_date_x_times.advance(),end()}}])}},{name:"cancel",class:"back-btn",onclick:end}])},3e3)}static goToInnerGarden(){Activities.task_handleLeavingAnimals(),App.pet.stopScriptedState(),App.pet.x="100%",App.pet.targetX=50,App.setScene(App.scene.garden_inner);const displayPlantsList=({onPlantClick:onPlantClick,filterFn:filterFn=()=>!0,additionalStartOptions:additionalStartOptions=[]})=>{const allPlantsList=App.plants.filter(filterFn).map((currentPlant,currentPlantIndex)=>{const plantNameText=`<span style="${currentPlant.isDead?"color: red":""}"> ${currentPlant.name} </span>`;return{name:`<span class="icon ${currentPlant.isDead?"opacity-half":""}">${currentPlant.getCSprite()}</span> ${plantNameText}`,onclick:()=>onPlantClick(currentPlant,currentPlantIndex)}});return App.displayList([...additionalStartOptions,...allPlantsList])},displayMainList=()=>{const mainList=App.displayList([{name:'<i class="icon fa-solid fa-plus icon"></i> plant',_disable:App.plants.length===App.constants.MAX_PLANTS,onclick:()=>{App.handlers.open_seed_list(!1,null,plantName=>{if(App.plants.length!==App.constants.MAX_PLANTS){const plant=new Plant({name:plantName});return App.plants.push(plant),App.handleGardenPlantsSpawn(!0),Missions.done(Missions.TYPES.plant_in_garden),Activities.task_floatingObjects(10,["resources/img/misc/add_green_01.png"]),App.sendAnalytics("plant",plantName),!0}return!1})}},{name:"stats",_disable:!App.plants.length,onclick:()=>displayPlantsList({onPlantClick:plant=>(App.handlers.open_plant_stats(plant),!0)})},{name:"water",_disable:!App.plants.some(p=>!p.isDead),onclick:async()=>{App.closeAllDisplays();const wateringCan=new Object2d({img:"resources/img/misc/watering_can_01.png",z:100}),previousController=App.getGameplayControlsState().onclick;App.toggleGameplayControls(!1);for(let i=0;i<App.plants.length;i++){const plant=App.plants[i];plant.isDead||(wateringCan.x=plant.position.x+8,wateringCan.y=plant.position.y,await App.wait(500),plant.water(),Missions.done(Missions.TYPES.water_crop))}wateringCan.removeObject(),App.pet.stats.current_expression+=.5,App.toggleGameplayControls(!1,previousController)}},{name:"harvest",_disable:!App.plants.some(p=>p.age===Plant.AGE.grown),onclick:()=>{const displayHarvestables=()=>{if(!App.plants.some(p=>p.age===Plant.AGE.grown))return;const list=displayPlantsList({onPlantClick:(plant,plantIndex)=>{App.plants.splice(plantIndex,1),App.handleGardenPlantsSpawn(!0),Activities.task_floatingObjects(10,["resources/img/misc/tick_green_01.png"]);let amount=random(3,5);return App.isGameplayBuffActive("doubleHarvest")&&(amount+=random(3,5)),App.addNumToObject(App.pet.inventory.harvests,plant.name,amount),App.displayConfirm(`\n                                            <div>${plant.getCSprite()}</div>\n                                            <div>${plant.name}</div>\n                                            <div>(x${amount})</div>\n                                        `,[{name:"ok",onclick:()=>{UI.clearLastClicked(),mainList.close(),list.close(),displayMainList(),displayHarvestables()}}]),App.sendAnalytics("harvest",plant.name),App.pet.stats.current_logic+=.25,!0},filterFn:plant=>plant.age===Plant.AGE.grown})};return displayHarvestables(),!0}},{name:"remove",_disable:!App.plants.length||App.plants.every(p=>p.age===Plant.AGE.grown),onclick:()=>(displayPlantsList({additionalStartOptions:App.plants.some(p=>p.isDead)?[{name:'<span style="color: red;"><i class="icon fa-solid fa-skull icon"></i> Dead ones</span>',onclick:()=>App.displayConfirm("Are you sure you want to remove all dead plants?",[{name:"yes",onclick:()=>{for(;;){const deadPlantIndex=App.plants.findIndex(p=>p.isDead);if(-1===deadPlantIndex)break;App.plants.splice(deadPlantIndex,1)}App.handleGardenPlantsSpawn(!0),App.closeAllDisplays(),Activities.task_floatingObjects(10,["resources/img/misc/remove_red_01.png"])}},{name:"no",class:"back-btn",onclick:()=>{}}])}]:[],onPlantClick:(plant,plantIndex)=>App.displayConfirm(`Are you sure you want to remove <b>${plant.name} (${Plant.AGE_LABELS[plant.age]})</b>?`,[{name:"yes",onclick:()=>{App.plants.splice(plantIndex,1),App.handleGardenPlantsSpawn(!0),App.closeAllDisplays(),Activities.task_floatingObjects(10,["resources/img/misc/remove_red_01.png"])}},{name:"no",class:"back-btn",onclick:()=>{}}]),filterFn:plant=>plant.age!==Plant.AGE.grown}),!0)},{name:"inventory",onclick:()=>App.displayList([{name:`\n                                <div class="flex-between flex-wrap" style="row-gap: 4px">\n                                    ${App.getHarvestInventoryUI()}\n                                </div>\n                                `,type:"text"}])},{name:"active buffs",onclick:()=>App.handlers.open_active_buffs("garden")},{name:'<i class="icon fa-solid fa-home"></i> go inside',class:"back-btn",onclick:()=>{App.setScene(App.scene.home),App.toggleGameplayControls(!0),App.pet.stopScriptedState(),App.pet.x="0%",App.pet.targetX=50}}]);return mainList};App.toggleGameplayControls(!1,displayMainList)}static goToGarden(){const openChooseNameDialog=(animalDef,onEndFn)=>App.displayPrompt(`Choose a name for ${animalDef.getFullCSprite()}:`,[{name:"set",onclick:text=>{animalDef.name=text,onEndFn?.(),App.displayPopup(`Name set to ${animalDef.name}!`)}},{name:"cancel",class:"back-btn",onclick:()=>{}}],animalDef.name),getNextAttractMs=(fromMs=App.animals.nextAttractMs)=>(fromMs||Date.now())+App.constants.ONE_HOUR*random(2,8),resetTreat=()=>{App.animals.treat=null,App.animals.treatBiteCount=0},checkForArrivedAnimal=()=>{if(App.animals.treat&&!(App.animals.nextAttractMs>Date.now()))if(App.animals.treatBiteCount++,App.animals.nextAttractMs=getNextAttractMs(),random(0,2))App.animals.treatBiteCount>2&&(resetTreat(),App.pet.stats.current_endurance+=3,App.displayConfirm("The food you placed out earlier is gone.<br><br>Unfortunately, its visitor chose not to stay this time, maybe you'll meet them next time!",[{name:"ok",onclick:()=>{}}]));else{resetTreat();const newAnimal=new AnimalDefinition({name:getRandomName(!1,!0),sprite:randomFromArray(ANIMAL_CHARACTERS)});App.animals.list.push(newAnimal),App.displayPopup(`A new animal ${newAnimal.getFullCSprite()} has chosen your backyard as their new home. Take good care of them!`,3e3,()=>openChooseNameDialog(newAnimal)),App.pet.stats.current_expression+=2,App.sendAnalytics("animal_arrived")}};if(App.animals.treat){const timeDelta=Date.now()-App.animals.nextAttractMs,repeatTimes=Math.ceil(timeDelta/(2*App.constants.ONE_HOUR));for(let i=0;i<clamp(repeatTimes,0,10);i++)checkForArrivedAnimal()}Activities.task_handleLeavingAnimals(),App.pet.stopScriptedState(),App.setScene(App.scene.garden),App.pet.x="100%",App.pet.targetX=50,App.toggleGameplayControls(!1,()=>App.displayList([{_ignore:!0,name:"Garden",onclick:()=>{Activities.goToInnerGarden()}},{name:"Animals",onclick:()=>App.displayList([...App.animals.list.map(animalDef=>({name:`${animalDef.getFullCSprite()}${animalDef.name}`,onclick:()=>App.displayList([{type:"text",name:`\n                                                Happiness:\n                                                ${App.createProgressbar(animalDef.stats.current_happiness).node.outerHTML}\n                                            `},{name:"feed",onclick:()=>App.handlers.open_food_list({buyMode:!1,filterType:"food",useMode:selectedFood=>{App.closeAllDisplays(),animalDef.feed(3*selectedFood.hunger_replenish);const startTime=App.time,spawnedAnimal=App.spawnedAnimals.find(a=>a.animalDefinition===animalDef),foodObject=new Object2d({parent:spawnedAnimal,image:App.preloadedResources[App.constants.FOOD_SPRITESHEET],spritesheet:{...App.constants.FOOD_SPRITESHEET_DIMENSIONS,cellNumber:selectedFood.sprite},scale:1,x:spawnedAnimal.x+spawnedAnimal.spritesheet.cellSize,y:spawnedAnimal.y-spawnedAnimal.spritesheet.cellSize,onDraw:me=>{App.pet.setLocalZBasedOnSelf(me)}});return spawnedAnimal.stopMove(),spawnedAnimal.inverted=!0,spawnedAnimal.triggerScriptedState("eating",App.INF,!1,!0,()=>{foodObject.removeObject(),spawnedAnimal.playCheeringAnimation(null,!0)},()=>{const elapsedTime=App.time-startTime,spriteOffset=Math.floor(elapsedTime/1500);foodObject.spritesheet.cellNumber=selectedFood.sprite+clamp(spriteOffset,0,2),spriteOffset>2&&spawnedAnimal.stopScriptedState()}),Missions.done(Missions.TYPES.feed_animal),!0},age:PetDefinition.LIFE_STAGE.adult})},{name:"play",onclick:()=>{App.closeAllDisplays(),animalDef.increaseHappiness(random(2,5));const spawnedAnimal=App.spawnedAnimals.find(a=>a.animalDefinition===animalDef);App.pet.stopScriptedState(),spawnedAnimal.stopScriptedState(),spawnedAnimal.interactWith(App.pet,{animation:"cheering",length:5e3}),Missions.done(Missions.TYPES.play_with_animal)}},{type:"text",name:App.getGameplayBuffUI(animalDef.getBuff())},{name:"rename",onclick:()=>openChooseNameDialog(animalDef,()=>App.closeAllDisplays())},{name:'<span style="color: red;">Release</span>',onclick:()=>App.displayConfirm(`Are you sure you want release ${animalDef.name} back into the wild?`,[{name:"yes",onclick:async()=>{App.closeAllDisplays();const previousController=App.getGameplayControlsState().onclick;App.toggleGameplayControls(!1),App.pet.stopMove(),App.pet.inverted=!1,App.pet.x="75%",App.pet.triggerScriptedState("uncomfortable",App.INF,!1,!0);const spawnedAnimal=App.spawnedAnimals.find(a=>a.animalDefinition===animalDef);spawnedAnimal.stopMove(),spawnedAnimal.x="50%",spawnedAnimal.y="100%",spawnedAnimal.targetX=-100,await spawnedAnimal.triggerScriptedState("moving",5e3,!1,!0),App.toggleGameplayControls(!1,previousController),App.pet.stopScriptedState(),App.displayPopup(`${animalDef.name} has been released back into the wild.`,4e3),App.animals.list.splice(App.animals.list.indexOf(animalDef),1),App.reloadScene(!0)}},{name:"no",class:"back-btn",onclick:()=>{}}])}])})),{_disable:App.animals.list.length>=App.constants.MAX_ANIMALS,name:'<i class="fa-solid fa-plus icon"></i> Attract Animal',onclick:()=>App.displayList([{name:App.animals.treat?"Replace food":"Place food",onclick:()=>App.handlers.open_food_list({buyMode:!1,filterType:"food",useMode:selectedFood=>(App.closeAllDisplays(),App.animals.treat=selectedFood.sprite,App.animals.treatBiteCount=0,App.animals.nextAttractMs=getNextAttractMs(Date.now()),App.reloadScene(!0),App.displayPopup("The food has been placed!<br><br>Check back in a few hours to see if you've gotten a visitor!",4e3),!0),age:PetDefinition.LIFE_STAGE.adult})},{type:"info",name:"Placing food out may attract new animals!"}])}])},{name:"active buffs",onclick:App.handlers.open_active_buffs},{name:'<i class="icon fa-solid fa-home"></i> go inside',class:"back-btn",onclick:()=>{App.setScene(App.scene.home),App.toggleGameplayControls(!0),App.pet.stopScriptedState(),App.pet.x="0%",App.pet.targetX=50}}]))}static getMail({onEndFn:onEndFn=App.handlers.show_newspaper,noSceneSwitch:noSceneSwitch}={}){App.pet.stopMove(),App.toggleGameplayControls(!1),noSceneSwitch||App.setScene(App.scene.garden,!1,{noPetBowl:!0}),App.pet.x="78%",App.pet.inverted=!1,App.pet.triggerScriptedState("idle_side",App.INF,!1,!0);const mailManDef=new PetDefinition({sprite:NPC_CHARACTERS[1],name:"Nazotchi"}),mailMan=new Pet(mailManDef,{x:"0%",y:App.scene.garden.petY,targetX:50,onDraw:me=>App.pet.setLocalZBasedOnSelf(me)}),payload=()=>{mailMan.removeObject(),onEndFn(),App.pet.stopScriptedState(),App.toggleGameplayControls(!0),App.setScene(App.scene.home),App.pet.x="50%"};mailMan.triggerScriptedState("moving",2500,null,!0,()=>{mailMan.stopMove(),mailMan.playCheeringAnimation(payload,!0),App.pet.playCheeringAnimation()})}static onlineHubTransition(onEndFn){Missions.done(Missions.TYPES.visit_online_hub),App.pet.stopMove(),App.toggleGameplayControls(!1),App.pet.x="50%",setTimeout(()=>App.playSound("resources/sounds/online_hub_transition_01.ogg",!0));const fadeOverlay=new Object2d({img:"resources/img/misc/cyberpunk_overlay_01.png",x:0,y:0,z:555,opacity:0,direction:!0,onDraw:me=>{Object2d.animations.flip(me,1e3),me.direction?me.opacity+=25e-5*App.deltaTime:me.opacity-=.001*App.deltaTime,me.opacity=clamp(me.opacity,0,2),me.direction||0!=me.opacity||me.removeObject()}});new Object2d({parent:fadeOverlay,img:"resources/img/misc/light_rays_02.png",z:556,opacity:0,x:"50%",y:"50%",composite:"overlay",onDraw:me=>{me.opacity=3*fadeOverlay.opacity,me.rotation+=.01*App.deltaTime,me.x="50%",me.y="50%"}});App.pet.triggerScriptedState("shocked",4e3,!1,!0,()=>{App.pet.targetY=void 0,onEndFn(fadeOverlay)}),App.pet.targetY=50}static async goToOnlineHub(){const{hasUploadedPetDef:hasUploadedPetDef,randomPetDefs:randomPetDefs}=App.temp.online,INTERACTION_LIKES_outgoing=hasUploadedPetDef.interactionOutgoingLikes??2,INTERACTION_LIKES_receiving=hasUploadedPetDef.interactionReceivingLikes??1,addInteraction=(def,skipApi)=>{skipApi||App.apiService.addInteraction(def.ownerId),def.interactions=(def.interactions??0)+INTERACTION_LIKES_outgoing,hasUploadedPetDef.interactions=(hasUploadedPetDef.interactions??0)+INTERACTION_LIKES_receiving};App.setScene(App.scene.online_hub),App.pet.stopMove(),App.pet.x="50%";let npcY=60;const otherPlayersPets=randomPetDefs.slice(0,7).map((def,i)=>{i&&i%2==0&&(npcY+=10);const p=new Pet(def,{x:`${random(0,100)}%`,y:`${npcY}%`,z:4+.15*i,opacity:1});return p.stats.wander_max=3,p});hasUploadedPetDef.status&&App.apiService.addPetDef();const despawnAllPets=()=>{otherPlayersPets.forEach(p=>p?.removeObject?.())},handleInteract=()=>{const petInteractions=otherPlayersPets.map(pet=>{const def=pet.petDefinition;return{name:`${def.getCSprite()} ${def.name}`,onclick:()=>App.displayList([{name:`\n                                <div style="\n                                    display: flex;\n                                    justify-content: space-between;\n                                    flex-wrap: wrap;   \n                                    align-items: center;                                     \n                                ">\n                                    <div>\n                                        <i class="fa-solid fa-user-circle"></i> ${def.owner}\n                                    </div>\n                                    <div>\n                                        <i class="fa-solid fa-thumbs-up"></i> ${def.interactions}\n                                    </div>\n                                </div>\n                                `,type:"text",solid:!0},{name:"hang out",onclick:()=>(def=>{App.closeAllDisplays(),App.toggleGameplayControls(!1),despawnAllPets(),addInteraction(def),Missions.done(Missions.TYPES.online_interact),Activities.invitePlaydate(def,App.scene.online_hub,()=>{App.displayConfirm(`Do you want to add ${def.getCSprite()} ${def.name} to your friends list?`,[{name:"yes",onclick:()=>(App.closeAllDisplays(),App.petDefinition.addFriend(def,1)?(App.displayPopup(`${def.getCSprite()} ${def.name} has been added to the friends list!`,3e3),addInteraction(def)):App.displayPopup(`You are already friends with ${def.name}`,3e3),!1)},{name:"no",class:"back-btn",onclick:()=>{}}]),setTimeout(()=>Activities.goToOnlineHub())})})(def)},{_disable:App.petDefinition.lifeStage<PetDefinition.LIFE_STAGE.adult||def.lifeStage<PetDefinition.LIFE_STAGE.adult,name:"go on date",onclick:()=>(def=>App.displayConfirm(`Do you want to go on a date with <div>${def.getCSprite()} ${def.name}</div>?`,[{name:"yes",onclick:()=>{despawnAllPets(),addInteraction(def),Activities.goOnDate(def,Activities.goToOnlineHub)}},{name:"cancel",class:"back-btn",onclick:()=>{}}]))(def)}])}});return App.displayList([...petInteractions,{name:`\n                        Every time you interact with another pet you'll receive \n                        <i class="fa-solid fa-thumbs-up"></i> ${INTERACTION_LIKES_receiving} \n                        and they'll receive\n                        <i class="fa-solid fa-thumbs-up"></i> ${INTERACTION_LIKES_outgoing} \n                    `,type:"info"}])},handleUploadCharacter=()=>App.displayConfirm(`Do you want to upload ${App.petDefinition.name} to HUBCHI so that other players can see and interact with them?`,[{name:"yes",onclick:async()=>{const popup=App.displayPopup("Uploading...",App.INF),{status:status}=await App.apiService.addPetDef();popup.close(),App.closeAllDisplays(),hasUploadedPetDef.status=status,App.displayPopup("Success!")}},{name:"no",class:"back-btn",onclick:()=>{}}]),handleSyncCharacter=()=>App.displayPopup("Syncing is now done automatically when entering Hubchi, this option will be removed later.",4e3),handleReturnHome=()=>App.displayConfirm("Are you sure you want to return home?",[{name:"yes",onclick:async()=>{App.closeAllDisplays(),otherPlayersPets.forEach(p=>p?.removeObject?.()),Activities.onlineHubTransition(fadeOverlay=>{App.setScene(App.scene.home),fadeOverlay.direction=!1,setTimeout(()=>{App.pet.playCheeringAnimation(()=>App.toggleGameplayControls(!0))},500)})}},{name:"no",class:"back-btn",onclick:()=>{}}]),handleFriendSearch=()=>App.handlers.open_hubchi_search(def=>addInteraction(def,!0)),handleRewardStore=()=>{const showItem=(image,name,description,unlockLikesReq,unlockKey)=>{const isUnlocked=App.getRecord(unlockKey);return App.displayConfirm(`\n                        <img style="max-width: 128px" src="${image}"></img>\n                        <br>\n                        <b>${name}</b>\n                        <br>\n                        <span>${description}</span>\n                    `,[{_disable:isUnlocked,name:isUnlocked?"reward collected":`unlock <div style="margin-left: auto"><i class="fa-solid fa-thumbs-up"></i> ${unlockLikesReq} </div>`,onclick:unlockKey?()=>{if((App.temp.online?.hasUploadedPetDef?.interactions||0)<unlockLikesReq)return App.displayPopup(`You don't have enough interactions to unlock ${name}.`);App.addRecord(unlockKey,1,!0),App.displayPopup(`<b>${name}</b> unlocked!`),App.sendAnalytics("unlocked_hubchi_reward_item",name)}:void 0},{name:"close",class:"back-btn",onclick:()=>{}}])},createEntryButton=(icon,name,item,onClick)=>({name:`<img class="icon" src="${icon}"></img> ${name} ${item.isNew?App.getBadge("new!"):""}`,onclick:onClick,isNew:item.isNew}),finalList=[...Object.keys(App.definitions.accessories).filter(e=>App.definitions.accessories[e].onlineShopAccessible).map(name=>{const item=App.definitions.accessories[name],icon=item.icon||item.image;return createEntryButton(icon,name,item,()=>showItem(icon,name,"accessory",item.unlockLikes,item.unlockKey))}),...Object.keys(App.definitions.room_background).filter(e=>App.definitions.room_background[e].onlineShopAccessible).map(name=>{const item=App.definitions.room_background[name],icon=item.image;return createEntryButton(icon,name,item,()=>showItem(icon,name,"background",item.unlockLikes,item.unlockKey))}),...Object.keys(App.definitions.shell_background).filter(e=>App.definitions.shell_background[e].onlineShopAccessible).map(key=>{const item=App.definitions.shell_background[key],icon=item.image;return createEntryButton(icon,item.name,item,()=>showItem(icon,item.name,"shell design",item.unlockLikes,item.unlockKey))})].sort((a,b)=>b.isNew-a.isNew);return App.displayList(finalList)};App.toggleGameplayControls(!1,()=>hasUploadedPetDef.status?App.displayList([{type:"text",solid:!0,name:`\n                        <div style="\n                            display: flex;\n                            justify-content: space-between;\n                            flex-wrap: wrap;\n                            align-items: center;\n                            width: 100%;\n                        ">\n                            <div style="\n                                display: flex;\n                                align-items: center;                        \n                            ">\n                                ${App.petDefinition.getCSprite()} You\n                            </div>\n                            <div>\n                                <i class="icon fa-solid fa-thumbs-up"></i> ${hasUploadedPetDef.interactions??0}\n                            </div>\n                        </div>\n                    `},{name:"interact",onclick:handleInteract},{_ignore:!0,name:"sync character",onclick:handleSyncCharacter},{name:"rewards store",onclick:handleRewardStore},{name:"add friend",onclick:handleFriendSearch},{name:'<i class="icon fa-solid fa-home"></i> return home',class:"back-btn",onclick:handleReturnHome}]):App.displayList([{type:"text",name:"\n                            Upload your character to get access to hubchi!\n                        "},{name:"Upload character",onclick:handleUploadCharacter},{name:'<i class="icon fa-solid fa-home"></i> return home',onclick:handleReturnHome},{name:"Hubchi is an online hub for players to interact with each other and win rewards!",type:"info"}]))}static encounter(spawnInMiddle){const despawnTime=App.time+App.constants.ONE_SECOND*random(15,30),def=new PetDefinition({sprite:NPC_CHARACTERS[0],name:"-_-",accessories:App.pet.stats.is_revived_once?["demon wings"]:[]}).setStats({current_hunger:0,current_health:0,current_fun:0,current_death_tick:0,speed:.1,wander_min:.1,wander_max:.11});return new Pet(def,{opacity:.5,x:spawnInMiddle?"50%":-50,castShadow:!1,z:App.constants.ACTIVE_PET_Z+1,isDespawning:!1,onDraw:me=>{me.isDespawning&&(me.opacity-=.001*App.deltaTime,me.opacity<0&&me.removeObject()),App.pet.stats.is_revived_once?me.isDespawning=App.time>despawnTime:me.isDespawning=!App.pet.stats.is_sleeping}}),!0}static goToVacation(vacationFn){App.closeAllDisplays(),App.toggleGameplayControls(!1),App.pet.stopMove(),App.pet.triggerScriptedState("idle",App.INF,0,!0,null),Activities.task_foam(()=>{vacationFn()})}static seaVacation(){App.pet.stats.is_at_vacation=!0,App.setScene(App.scene.seaVacation);const backgroundMusic=App.playAdvancedSound({loop:!0,src:"resources/sounds/vacation_track_01.ogg"}),end=()=>{App.toggleGameplayControls(!1),backgroundMusic.stop(),Activities.task_foam(()=>{App.toggleGameplayControls(!0),App.pet.stats.is_at_vacation=!1,App.pet.stopScriptedState(),App.setScene(App.scene.home),App.pet.playCheeringAnimation(),App.save()}),App.animals?.list?.forEach(a=>{a.feed?.(100),a.lastStatsUpdate=Date.now()})};App.pet.triggerScriptedState("idle",App.INF,0,!0,null,Pet.scriptedEventDrivers.playingWithItem.bind({pet:App.pet})),setTimeout(()=>{App.pet.x="65%",App.pet.y="67%",App.pet.stopMove()}),App.toggleGameplayControls(!1,()=>{App.displayConfirm(`Are you sure you want to end ${App.petDefinition.name}'s vacation?`,[{name:"yes",onclick:end},{name:"no",class:"back-btn",onclick:()=>{}}])})}static async cookingGame({stirringSpeed:stirringSpeed=.001,skipCamera:skipCamera,resultFoodName:resultFoodName}={}){App.closeAllDisplays(),App.pet.triggerScriptedState("idle",App.INF,0,!1),App.sendAnalytics("cooking_game",resultFoodName||""),Missions.done(Missions.TYPES.cook),App.pet.stats.current_expression+=1.5;const potObject=new Object2d({img:"resources/img/misc/cooking_pot_p01.png",z:30,x:0,y:0}),starLogicHandler=(new Object2d({img:"resources/img/misc/cooking_pot_p02.png",z:30.1,x:0,y:0,clipCircle:!0,parent:potObject,onDraw:me=>{Object2d.animations.rotateAround(me,50*stirringSpeed)}}),new Object2d({img:"resources/img/misc/cooking_pot_p03.png",z:30.4,x:0,y:0,parent:potObject}),me=>{me._originX||(me._originX=me.config.drawer.getRelativePositionX(39)),me._originY||(me._originY=me.config.drawer.getRelativePositionY(39)),void 0!==me._current&&me._current!=Math.PI||(me._current=0),me._current+=stirringSpeed*App.deltaTime,Object2d.animations.circleAround(me,20,me._current,me._originX,me._originY),Object2d.animations.pulseScale(me,.01,Math.min(10*Math.abs(stirringSpeed),.03))}),starObjects=[];for(let i=0;i<3;i++){const img=new Object2d({img:"resources/img/misc/star_01.png",width:22,height:22,y:"50%",x:"50%",z:30.5,_current:2.0944*i,pulseScaleFloat:i,clipCircle:!0,parent:potObject,noPreload:!0,onDraw:starLogicHandler});starObjects.push(img)}let failChance=resultFoodName?3:25,currentTargetImgIndex=0;App.toggleGameplayControls(!1,()=>{if(currentTargetImgIndex<starObjects.length&&!skipCamera)App.useWebcam(imgData=>{imgData&&-1!=imgData||(imgData="resources/img/misc/exclam_01.png",failChance+=35),starObjects[currentTargetImgIndex].setImg(imgData),currentTargetImgIndex++,stirringSpeed+=.001});else if((stirringSpeed+=.001)>.02){const failed=random(0,100)<failChance;let randomFoodName,backgroundObject;App.toggleGameplayControls(!1),stirringSpeed=-100,Activities.task_foam(()=>{potObject.removeObject(),backgroundObject=new Object2d({img:"resources/img/misc/light_rays_01.png",width:144,height:144,x:"50%",y:"50%",z:30,onDraw:me=>{Object2d.animations.rotateAround(me)}}),randomFoodName=resultFoodName||randomFromArray(Object.keys(App.definitions.food));const randomFood=App.definitions.food[randomFoodName];App.constants.FOOD_SPRITESHEET_DIMENSIONS.cellNumber=randomFood.sprite,failed?new Object2d({img:"resources/img/misc/exclam_01.png",width:32,height:32,x:"50%",y:"50%",z:31,parent:backgroundObject,clipCircle:!0,onDraw:me=>{Object2d.animations.pulseScale(me,.01,.01)}}):(setTimeout(()=>App.playSound("resources/sounds/task_complete_02.ogg",!0),1e3),new Object2d({img:App.constants.FOOD_SPRITESHEET,spritesheet:App.constants.FOOD_SPRITESHEET_DIMENSIONS,x:"50%",y:"50%",z:31,parent:backgroundObject,onDraw:me=>{Object2d.animations.pulseScale(me,.01,.01)}}))},()=>{setTimeout(()=>{function end(){backgroundObject.removeObject(),App.toggleGameplayControls(!0),App.pet.stopScriptedState(),App.pet.x="50%"}if(failed)App.displayPopup(`${App.petDefinition.name} <br>failed to make anything edible!<br>`,3e3,()=>{end(),App.pet.stats.current_fun-=random(5,15),App.pet.playUncomfortableAnimation()});else{const amount=resultFoodName?random(1,3):1;App.displayPopup(`${App.petDefinition.name} <br>made x${amount}<br> <b>${randomFoodName}</b>!`,3e3,()=>{end(),App.pet.playCheeringAnimation(),App.pet.stats.current_fun+=random(10,25),App.addNumToObject(App.pet.inventory.food,randomFoodName,amount),skipCamera?App.definitions.achievements.harvest_cook_x_times.advance():App.definitions.achievements.camera_cook_x_times.advance()})}},2e3)})}})}static async getDressed(middleFn,onEndFn,cheer){App.closeAllDisplays(),App.toggleGameplayControls(!1);let curtainTargetElevation=16;const curtainObject=new Object2d({img:"resources/img/misc/dresser_curtain_01.png",x:0,y:-100,z:9,onDraw:curtain=>{curtain.targetY=curtainTargetElevation,curtain.moveToTarget(.03),Object2d.animations.bob(curtain,.01,1)}});App.pet.stopMove(),App.pet.x="50%",await App.pet.triggerScriptedState("idle",4e3,0,!0),middleFn&&middleFn(),curtainTargetElevation=-100,await App.pet.triggerScriptedState("idle",2e3,0,!0),curtainObject.removeObject(),App.pet.playCheeringAnimationIfTrue(cheer,()=>{App.pet.stats.current_expression+=2,App.toggleGameplayControls(!0),onEndFn()})}static async pet(){App.sendAnalytics("petting");let idleTimer=null,closeTimer=null;App.pet.y;App.pet.stopMove(),App.pet.x="50%",App.pet.targetY=132,App.pet.shadowOffset=999,App.toggleGameplayControls(!1),await App.pet.triggerScriptedState("cheering",1e3,null,!0),App.pet.scale=2,App.pet.targetY=50,await App.pet.triggerScriptedState("cheering",1e3,null,!0),App.pet.scale=3,App.pet.targetY=60,App.pet.stats.current_discipline+=random(1,2),App.toggleGameplayControls(!1,()=>{App.definitions.achievements.pat_x_times.advance(),Missions.done(Missions.TYPES.pat),App.pet.setState("blush"),App.pet.stats.current_fun+=.1*random(1,4),idleTimer&&clearTimeout(idleTimer),closeTimer&&clearTimeout(closeTimer),App.playSound("resources/sounds/cute.ogg",!0),Activities.task_floatingHearts(),idleTimer=setTimeout(()=>{App.pet.setState("idle"),closeTimer=setTimeout(()=>App.pet.stopScriptedState(),5e3),idleTimer=null},250)}),await App.pet.triggerScriptedState("idle",App.INF,null,!0,()=>{App.reloadScene(),App.toggleGameplayControls(!0),App.pet.shadowOffset=0,App.pet.scale=1,App.pet.playCheeringAnimation(),App.pet.stats.current_expression+=1,App.pet.stats.current_endurance+=1,App.pet.stats.current_logic+=1})}static standWork(){App.closeAllDisplays(),App.setScene(App.scene.stand),App.definitions.achievements.work_x_times.advance();const backgroundMusic=App.playAdvancedSound({loop:!0,src:"resources/sounds/work_track_01.ogg"});let totalMoneyMade=0,standObject=new Object2d({img:"resources/img/misc/stand_01_booth.png",x:0,y:0,z:19});App.toggleGameplayControls(!1,()=>{App.pet.stopScriptedState()}),App.pet.stopMove(),App.pet.x="68%",App.pet.y="70%",App.pet.inverted=!1;let currentCustomer,startTime=Date.now(),nextCustomerSpawnTime=Date.now()+random(0,8e3);App.pet.triggerScriptedState("idle",2e5,0,!0,()=>{backgroundMusic.stop(),standObject.removeObject();let elapsedTime=Math.round((Date.now()-startTime)/1e3);Activities.task_endWork(elapsedTime,totalMoneyMade),currentCustomer?.removeObject()},()=>{Date.now()>nextCustomerSpawnTime&&(nextCustomerSpawnTime=Date.now()+random(8e3,45e3),currentCustomer=function(){const standDuration=random(2e3,5e3),badAnimations=["angry"],midAnimations=["uncomfortable","shocked"],goodAnimations=["eating","cheering"];let possibleAnimations=[...goodAnimations,...midAnimations,...badAnimations];const negativeMoodlets=App.pet.hasMoodlet("hungry")+App.pet.hasMoodlet("bored")+App.pet.hasMoodlet("sick")+App.pet.hasMoodlet("sleepy");possibleAnimations=negativeMoodlets&&negativeMoodlets<=2?[...midAnimations,...goodAnimations]:negativeMoodlets&&negativeMoodlets<=4?[...badAnimations,...midAnimations]:[...goodAnimations];const currentAnimation=randomFromArray(possibleAnimations);switch(currentAnimation){case"eating":case"cheering":totalMoneyMade+=random(8,12);break;case"shocked":case"uncomfortable":totalMoneyMade+=random(3,5);break;case"angry":totalMoneyMade+=2}let otherPet=new Pet(App.getRandomPetDef(random(1,2)));return otherPet.stopMove(),otherPet.x=-32,otherPet.y="100%",otherPet.z=20,otherPet.inverted=!0,otherPet.targetX=8,App.pet.setState("idle_side"),otherPet.triggerScriptedState("moving",4e3,0,!0,()=>{otherPet.stopMove(),otherPet.x=8,App.pet.setState("eating"),otherPet.triggerScriptedState(currentAnimation,standDuration,0,!0,()=>{otherPet.targetX=-100,App.pet.setState("idle"),App.playSound("resources/sounds/task_complete.ogg",!0),otherPet.triggerScriptedState("moving",5e3,0,!0,()=>{otherPet.removeObject()})})}),otherPet}())})}static battle(otherPetDef){App.setScene(App.scene.battle),otherPetDef||(otherPetDef=App.getRandomPetDef(App.petDefinition.lifeStage));let otherPet=new Pet(otherPetDef);otherPet.stopMove(),otherPet.x="75%",otherPet.y="40%",otherPet.inverted=!1,otherPet.triggerScriptedState("battle",App.INF,0,!0,()=>{otherPet.removeObject()},()=>{Object2d.animations.bob(otherPet,.01,.1)}),App.pet.stopMove(),App.pet.x="25%",App.pet.y="90%",App.pet.inverted=!0,App.pet.triggerScriptedState("battle",App.INF,0,!0,()=>{},()=>{Object2d.animations.bob(App.pet,.01,.12)}),App.toggleGameplayControls(!1,()=>{})}static playEggUfoAnimation(callback){if(!App.pet.eggObject)return;App.toggleGameplayControls(!1);let egg=App.pet.eggObject;egg.y=-40;let stage=0;this.ufoObject=new Object2d({image:App.preloadedResources["resources/img/misc/ufo_01.png"],y:-120,x:0});let drawEvent=()=>{egg.y=lerp(egg.y,72,8e-4*App.deltaTime),0==stage?(this.ufoObject.y=lerp(this.ufoObject.y,0,.007*App.deltaTime),egg.y>=65&&(stage=1)):(this.ufoObject.y=lerp(this.ufoObject.y,-120,.001*App.deltaTime),this.ufoObject.y<=-110&&(stage=2)),2==stage&&(App.toggleGameplayControls(!0),callback&&callback(),this.ufoObject.removeObject(),App.unregisterOnDrawEvent(drawEvent))};App.registerOnDrawEvent(drawEvent)}static stayAtParents(end){if(App.sendAnalytics("stay_at_parents"),end)return App.toggleGameplayControls(!0),App.setScene(App.scene.home),App.pet.playCheeringAnimation(),App.pet.stats.is_at_parents=!1,void(App.pet.stats.current_discipline+=random(0,5));App.toggleGameplayControls(!1,()=>{App.displayConfirm(`Pickup ${App.petDefinition.name} from their parents house?`,[{name:"yes",onclick:()=>{Activities.stayAtParents(!0)}},{name:"no",class:"back-btn",onclick:()=>{}}])}),App.setScene(App.scene.parentsHome),App.pet.stats.is_at_parents=!0}static goToClinic(onEndFn){function task_visit_doctor(){App.setScene(App.scene.hospitalInterior),App.pet.stopMove(),App.pet.x=-30,App.pet.targetX=50,App.pet.triggerScriptedState("moving",4e3,null,!0,()=>{App.displayPopup("<b>Dr. Banzo:</b><br>let's see...",3500),App.pet.x="20%",App.pet.inverted=!0,App.pet.triggerScriptedState("idle_side",4100,null,!0,()=>{let health=App.pet.stats.current_health,state="very healthy";health<=.2*App.pet.stats.max_health?state="very sick":health<=.45*App.pet.stats.max_health?state="sick":health<=.75*App.pet.stats.max_health&&(state="healthy");const onEnd=()=>{App.setScene(App.scene.home),App.toggleGameplayControls(!0),onEndFn?.(),App.pet.stats.current_endurance+=1};"very sick"==state||"sick"==state?App.pet.triggerScriptedState("shocked",2e3,!1,!0,()=>{App.displayPopup(`${App.pet.petDefinition.name} is ${state}`,5e3,()=>App.pet.x="50%"),onEnd()}):App.pet.triggerScriptedState("cheering_with_icon",2e3,!1,!0,()=>{App.displayPopup(`${App.pet.petDefinition.name} is ${state}`,5e3,()=>App.pet.x="50%"),onEnd()})})})}App.toggleGameplayControls(!1),Missions.done(Missions.TYPES.visit_doctor),task_visit_doctor()}static bathe(){if(App.closeAllDisplays(),App.setScene(App.scene.bathroom),App.pet.stats.is_misbehaving)return App.toggleGameplayControls(!1),void App.pet.playRefuseAnimation(()=>{App.setScene(App.scene.home),App.toggleGameplayControls(!0)});Missions.done(Missions.TYPES.use_bath);let foams=[];App.toggleGameplayControls(!1,()=>{App.pet.inverted=!App.pet.inverted;let flipTime=random(200,300),foamSpeed=.001*random(5,13),foamStr=.1*random(1,4),foam=new Object2d({img:"resources/img/misc/foam_single.png",x:50+random(-15,15)+Math.random(),y:42+random(-2,2)+Math.random(),z:20,onDraw:me=>{Object2d.animations.flip(me,flipTime),Object2d.animations.bob(me,foamSpeed,foamStr),Object2d.animations.pulseScale(me,foamSpeed,.01)}});foams.push(foam),foams.length>=10&&(foams.forEach(f=>f.removeObject()),App.toggleGameplayControls(!1),App.pet.stopScriptedState()),App.pet.stats.current_cleanliness+=25,App.pet.stats.current_discipline+=random(1,3),App.playSound("resources/sounds/ui_click_03.ogg",!0)});const bathClippedObject=new Object2d({img:App.scene.bathroom.image,x:0,y:0,z:19,clip:[[38,51],[38,68],[81,68],[81,51]]});App.pet.stopMove(),App.pet.x="64%",App.pet.y="64%",App.pet.triggerScriptedState("idle",App.INF,0,!0,()=>{App.pet.x="50%",App.pet.y="100%",bathClippedObject.removeObject(),App.pet.playCheeringAnimation(()=>{App.setScene(App.scene.home),App.toggleGameplayControls(!0)})})}static poop(force){App.closeAllDisplays(),App.setScene(App.scene.bathroom),App.toggleGameplayControls(!1),!force&&App.pet.stats.current_bladder>App.pet.stats.max_bladder/2?App.pet.playRefuseAnimation(()=>{App.setScene(App.scene.home),App.toggleGameplayControls(!0)}):(Missions.done(Missions.TYPES.use_toilet),App.definitions.achievements.use_toilet_x_times.advance(),App.pet.needsToiletOverlay.hidden=!1,App.pet.stats.current_bladder=App.pet.stats.max_bladder,App.pet.stats.current_logic+=2,App.pet.stats.current_discipline+=random(2,10),App.petDefinition.lifeStage<=PetDefinition.LIFE_STAGE.child&&!force&&++App.pet.stats.used_toilet>random(2,5)&&(App.pet.stats.is_potty_trained=!0),App.pet.stopMove(),App.pet.x="21%",App.pet.y="85%",App.pet.inverted=!0,App.pet.triggerScriptedState("sitting",5e3,0,!0,()=>{App.pet.x="50%",App.pet.y="100%",App.pet.playCheeringAnimation(()=>{App.setScene(App.scene.home),App.toggleGameplayControls(!0)})}))}static wedding(otherPetDef=App.getRandomPetDef()){App.closeAllDisplays(),App.setScene(App.scene.wedding),App.toggleGameplayControls(!1),App.petDefinition.maxStats(),App.definitions.achievements.marry_x_times.advance();const otherPet=new Pet(otherPetDef);try{App.sendAnalytics("wedding",JSON.stringify({a:App.petDefinition.sprite,b:otherPetDef.sprite}))}catch(e){}const heartParticleSpawner=setInterval(()=>Activities.task_floatingHearts(),500),heartSpawner=setInterval(()=>{new Object2d({img:"resources/img/misc/wedding_heart_01.png",x:0,y:0,scale:0,opacity:.95,composite:"color-burn",onDraw:me=>{me.scale+=.00115*App.deltaTime,me.opacity-=5e-4*App.deltaTime,me.opacity<=0&&me.removeObject()}})},1e3);App.pet.stopMove(),otherPet.stopMove(),otherPet.x="33%",App.pet.x="67%",App.pet.y=0,otherPet.y=0,App.pet.targetY=56,otherPet.targetY=56,otherPet.inverted=!0,App.pet.inverted=!1,otherPet.triggerScriptedState("blush",App.INF,0,!0),App.pet.triggerScriptedState("blush",App.INF,0,!0),setTimeout(()=>{App.playSound("resources/sounds/wedding_song_01.ogg",!0)}),setTimeout(()=>{otherPet.triggerScriptedState("idle_side",App.INF,0,!0),App.pet.triggerScriptedState("idle_side",App.INF,0,!0)},8e3),setTimeout(()=>{otherPet.triggerScriptedState("kissing",App.INF,0,!0),App.pet.triggerScriptedState("kissing",App.INF,0,!0)},12380),setTimeout(()=>{Activities.task_foam(()=>{App.pet.removeObject(),otherPet.removeObject();let parentA=App.petDefinition,parentB=otherPetDef;App.petDefinition=App.getPetDefFromParents(parentA,parentB),App.pet.stopMove(),App.setScene(App.scene.home),App.pet=App.createActivePet(App.petDefinition),clearInterval(heartParticleSpawner),clearInterval(heartSpawner)},()=>{App.toggleGameplayControls(!0),App.handlers.show_set_pet_name_dialog()})},18e3)}static dbg_randomMarriage(){App.pet.removeObject();let parentA=App.petDefinition;const parentAFamily=parentA.family;parentA=App.getRandomPetDef(2),parentA.family=parentAFamily,App.petDefinition=App.getPetDefFromParents(parentA,App.getRandomPetDef(2)),App.pet.stopMove(),App.setScene(App.scene.home),App.pet=App.createActivePet(App.petDefinition),App.pet.stats.is_egg=!1}static birthday(){App.setScene(App.scene.home),App.toggleGameplayControls(!1),App.pet.stats.has_poop_out=!1,App.pet.stats.current_bladder=100,App.definitions.achievements.birthday_x_times.advance();let otherPetDefs=[...App.petDefinition.friends].map(value=>({value:value,sort:Math.random()})).sort((a,b)=>a.sort-b.sort).map(({value:value})=>value);for(let i=0;i<3;i++)otherPetDefs.push(App.getRandomPetDef(App.petDefinition.lifeStage));const otherPets=otherPetDefs.slice(0,3).map(def=>new Pet(def)),table=new Object2d({img:"resources/img/misc/table_01.png",x:28,y:68,z:App.constants.ACTIVE_PET_Z-.1}),cake=new Object2d({img:"resources/img/misc/cake_01.png",x:39,y:58,z:App.constants.ACTIVE_PET_Z-.1});otherPets.forEach((pet,i)=>{switch(pet.stopMove(),pet.targetX=20,pet.x=-10*i,i){case 0:pet.targetX=50,pet.targetY=65;break;case 1:pet.targetX=12,pet.targetY=65;break;case 2:pet.targetX=5,pet.targetY=85,pet.z=App.constants.ACTIVE_PET_Z-.05}pet.triggerScriptedState("moving",App.INF,0,!0,null,pet=>{pet.isMoving||pet.setState("cheering")})}),App.pet.x="80%",App.pet.stopMove(),App.pet.inverted=!1,App.pet.triggerScriptedState("idle_side",3e3,0,!0,()=>{App.playSound("resources/sounds/birthday_song_01.ogg",!0),App.pet.triggerScriptedState("cheering",13e3,0,!0,()=>{App.pet.triggerScriptedState("cheering",1e4,0,!0),Activities.task_foam(()=>{otherPets.forEach(pet=>pet.removeObject()),table.removeObject(),cake.removeObject(),App.pet.ageUp(),App.pet.x="50%",App.pet.y=60,App.pet.stopMove(),App.pet.triggerScriptedState("blush",3e3,0,!0,()=>{App.setScene(App.scene.home),App.toggleGameplayControls(!0),App.pet.playCheeringAnimation()}),App.sendAnalytics("age_up",App.petDefinition.lifeStage)})})})}static redecorRoom(callbackFn){App.toggleGameplayControls(!1),App.definitions.achievements.redecor_x_times.advance(),App.pet.stats.current_expression+=1;let otherPetDef=new PetDefinition({sprite:"resources/img/character/chara_290b.png"}),otherPet=new Pet(otherPetDef);otherPet.stopMove(),otherPet.x="100%",App.pet.stopMove(),App.pet.x=10,otherPet.triggerScriptedState("moving",App.INF,null,!0),otherPet.targetX=80-otherPet.spritesheet.cellSize,App.pet.triggerScriptedState("idle",3e3,null,!0,()=>{otherPet.stopScriptedState(),otherPet.x=80-otherPet.spritesheet.cellSize,otherPet.stopMove(),App.pet.stopMove(),Activities.task_foam(()=>{App.setScene(App.currentScene,!0),App.pet.x=10},()=>{App.pet.stopScriptedState()}),otherPet.triggerScriptedState("idle",App.INF),App.pet.triggerScriptedState("idle",App.INF,null,!0,()=>{otherPet.stopScriptedState(),otherPet.triggerScriptedState("moving",App.INF),otherPet.targetX=120,App.pet.inverted=!0,App.pet.triggerScriptedState("idle_side",3e3,null,!0,()=>{otherPet.stopScriptedState(),App.pet.x="50%",App.pet.stats.current_fun+=55,App.pet.statsManager(),App.pet.playCheeringAnimationIfTrue(App.pet.hasMoodlet("amused"),()=>App.setScene(App.scene.home)),App.drawer.removeObject(otherPet),App.toggleGameplayControls(!0),callbackFn?.()})})})}static inviteGiveGift(otherPetDef){App.setScene(App.scene.home),App.toggleGameplayControls(!1);let otherPet=new Pet(otherPetDef);App.definitions.achievements.give_gifts_x_times.advance(),Missions.done(Missions.TYPES.gift);const wantedFriendDef=App.petDefinition.friends[App.pet.stats.current_want.item];App.petDefinition.checkWant(otherPetDef==wantedFriendDef,App.constants.WANT_TYPES.playdate),otherPet.stopMove(),otherPet.x="100%",App.pet.stopMove(),App.pet.x=10;const gift=new Object2d({img:"resources/img/misc/gift.png",x:"50%",y:"80%"});otherPet.triggerScriptedState("moving",App.INF,null,!0),otherPet.targetX=90-otherPet.spritesheet.cellSize,App.pet.inverted=!0,App.pet.triggerScriptedState("idle_side",2500,null,!0,()=>{otherPet.stopScriptedState(),otherPet.x=90-otherPet.spritesheet.cellSize,App.pet.x=10,otherPet.stopMove(),App.pet.stopMove(),otherPet.triggerScriptedState("cheering",App.INF),App.pet.triggerScriptedState("cheering",3e3,null,!0,()=>{otherPet.stopScriptedState(),otherPet.triggerScriptedState("moving",App.INF,!1,!0,null,()=>{gift.x=otherPet.x+10}),otherPet.targetX=120,App.pet.inverted=!0,App.pet.triggerScriptedState("blush",3e3,null,!0,()=>{otherPet.stopScriptedState(),App.pet.x="50%",App.pet.stats.current_fun+=55,App.pet.stats.current_expression+=2,App.pet.stats.current_logic+=.5,App.pet.statsManager(),App.pet.playCheeringAnimationIfTrue(App.pet.hasMoodlet("amused"),()=>App.setScene(App.scene.home)),App.drawer.removeObject(otherPet),App.drawer.removeObject(gift),App.toggleGameplayControls(!0)})})})}static officeWork(){App.closeAllDisplays(),App.setScene(App.scene.office),App.definitions.achievements.work_x_times.advance();const backgroundMusic=App.playAdvancedSound({loop:!0,src:"resources/sounds/work_track_01.ogg"}),dynamicBackground=new Object2d({img:"resources/img/background/house/office_01.png",x:0,y:0,spritesheet:{cellSize:App.drawer.bounds.width,cellNumber:2,rows:1,columns:3},onDraw:me=>Object2d.animations.cycleThroughFrames(me,250,!0)});App.toggleGameplayControls(!1,()=>{App.pet.stopScriptedState()}),App.pet.stopMove(),App.pet.inverted=!0,App.pet.x="53%",App.pet.y="78%";const startTime=Date.now();App.pet.triggerScriptedState("eating",2e5,!1,!0,()=>{backgroundMusic.stop(),dynamicBackground.removeObject();let elapsedTime=Math.round((Date.now()-startTime)/1e3);Activities.task_endWork(elapsedTime,Math.round(elapsedTime/2.5))},me=>{random(0,50)||me.setState(randomFromArray(["eating","sitting"]))})}static inviteDoctorVisit(){App.setScene(App.scene.home),App.toggleGameplayControls(!1);let otherPetDef=new PetDefinition({sprite:"resources/img/character/chara_291b.png"}),otherPet=new Pet(otherPetDef);otherPet.stopMove(),otherPet.x="100%",App.pet.stopMove(),App.pet.x=20,otherPet.triggerScriptedState("moving",App.INF,null,!0),otherPet.targetX=80-otherPet.spritesheet.cellSize,App.pet.triggerScriptedState("idle",3e3,null,!0,()=>{otherPet.stopScriptedState(),otherPet.x=80-otherPet.spritesheet.cellSize,App.pet.x=20,otherPet.stopMove(),App.pet.stopMove(),App.pet.inverted=!0,otherPet.triggerScriptedState("eating",App.INF),App.pet.triggerScriptedState("eating",8e3,null,!0,()=>{otherPet.stopScriptedState(),otherPet.triggerScriptedState("moving",App.INF),otherPet.targetX=120,App.pet.inverted=!0,App.pet.triggerScriptedState("idle_side",3e3,null,!0,()=>{otherPet.stopScriptedState(),App.pet.x="50%";let health=App.pet.stats.current_health,state="very healthy";health<=.2*App.pet.stats.max_health?state="very sick":health<=.45*App.pet.stats.max_health?state="sick":health<=.75*App.pet.stats.max_health&&(state="healthy"),"very sick"==state||"sick"==state?App.pet.triggerScriptedState("shocked",2e3,!1,!0,()=>{App.displayPopup(`${App.pet.petDefinition.name} is ${state}`,5e3)}):App.pet.triggerScriptedState("cheering",2e3,!1,!0,()=>{App.displayPopup(`${App.pet.petDefinition.name} is ${state}`,5e3)}),App.drawer.removeObject(otherPet),App.toggleGameplayControls(!0)})})})}static goToWalkwayMall(){App.toggleGameplayControls(!1,()=>{App.pet.stopScriptedState()}),App.setScene(App.scene.walkway),Missions.done(Missions.TYPES.visit_mall),App.pet.x="100%",App.pet.y="74%",App.pet.targetX=-20,App.pet.triggerScriptedState("moving",3e3,null,!0,()=>{App.setScene(App.scene.home),App.handlers.open_mall_activity_list(),App.toggleGameplayControls(!0)})}static goToArcade(){App.toggleGameplayControls(!1,()=>{App.pet.stopScriptedState()}),App.setScene(App.scene.arcade);let randomNpcs=new Array(2).fill(void 0).map((item,i)=>{let petDef=App.getRandomPetDef(1),npcPet=new Pet(petDef);return npcPet.x=1==i?15:0,npcPet.stopMove(),npcPet.triggerScriptedState("cheering",App.INF,null,!0),npcPet});App.pet.triggerScriptedState("moving",2500,null,!0,()=>{App.setScene(App.scene.home),App.handlers.open_game_list(),App.toggleGameplayControls(!0),randomNpcs.forEach(npc=>npc.removeObject())},Pet.scriptedEventDrivers.movingIn.bind({pet:App.pet}))}static goToMarket(){App.toggleGameplayControls(!1,()=>{App.pet.stopScriptedState()}),App.setScene(App.scene.market),Missions.done(Missions.TYPES.visit_market);let randomNpcs=new Array(2).fill(void 0).map((item,i)=>{let petDef=App.getRandomPetDef(2),npcPet=new Pet(petDef);return 1==i?npcPet.x=30:(npcPet.x=0,npcPet.inverted=!0),npcPet.stopMove(),npcPet.triggerScriptedState("eating",App.INF,null,!0),npcPet});App.pet.triggerScriptedState("moving",2500,null,!0,()=>{App.setScene(App.scene.home),App.handlers.open_market_menu(),App.toggleGameplayControls(!0),randomNpcs.forEach(npc=>npc.removeObject())},Pet.scriptedEventDrivers.movingIn.bind({pet:App.pet}))}static invitePlaydate(otherPetDef,scene,onEndFn){App.setScene(scene??App.scene.home),App.toggleGameplayControls(!1),otherPetDef.increaseFriendship(8);let otherPet=new Pet(otherPetDef);Missions.done(Missions.TYPES.playdate);const wantedFriendDef=App.petDefinition.friends[App.pet.stats.current_want.item];App.petDefinition.checkWant(otherPetDef==wantedFriendDef,App.constants.WANT_TYPES.playdate),otherPet.stopMove(),otherPet.x="100%",App.pet.stopMove(),App.pet.x=20,otherPet.triggerScriptedState("moving",App.INF,null,!0),otherPet.targetX=80-otherPet.spritesheet.cellSize,App.pet.triggerScriptedState("idle",3e3,null,!0,()=>{otherPet.stopScriptedState(),otherPet.x=80-otherPet.spritesheet.cellSize,App.pet.x=20,otherPet.stopMove(),App.pet.stopMove(),otherPet.triggerScriptedState("cheering",App.INF),App.pet.triggerScriptedState("cheering",5e3,null,!0,()=>{otherPet.stopScriptedState(),otherPet.triggerScriptedState("moving",App.INF),otherPet.targetX=120,App.pet.inverted=!0,App.pet.triggerScriptedState("idle_side_uncomfortable",3e3,null,!0,()=>{switch(otherPet.stopScriptedState(),App.pet.x="50%",App.pet.stats.current_fun+=30,random(0,2)){case 0:App.pet.stats.current_expression+=2;break;case 1:App.pet.stats.current_endurance+=2;break;case 2:App.pet.stats.current_logic+=2}App.pet.statsManager(),App.drawer.removeObject(otherPet),App.pet.playCheeringAnimationIfTrue(App.pet.hasMoodlet("amused"),()=>{onEndFn?.(),App.toggleGameplayControls(!0),App.setScene(App.scene.home)})})})})}static goToPark(otherPetDef,onEndFn){if(otherPetDef){const wantedFriendDef=App.petDefinition.friends[App.pet.stats.current_want.item];App.petDefinition.checkWant(otherPetDef==wantedFriendDef,App.constants.WANT_TYPES.playdate)}else random(1,100)<=60&&(otherPetDef=App.getRandomPetDef(App.petDefinition.lifeStage),Missions.done(Missions.TYPES.find_park_friend));let otherPet;App.pet.x="50%",App.setScene(App.scene.park),App.toggleGameplayControls(!1,()=>App.pet.stopScriptedState()),App.pet.speedOverride=.025,otherPetDef&&(otherPet=new Pet(otherPetDef,{x:"75%",speedOverride:.001*random(15,35)}),otherPet.triggerScriptedState("playing",1e4,null,!0,!1,Pet.scriptedEventDrivers.playing.bind({pet:otherPet})),otherPet.nextRandomTargetSelect=0,App.petDefinition.addFriend(otherPetDef,1),otherPetDef.increaseFriendship());App.pet.triggerScriptedState("playing",1e4,null,!0,()=>{App.toggleGameplayControls(!1),App.pet.x="50%",App.pet.stats.current_fun+=15,App.pet.stats.current_endurance+=.5,App.pet.statsManager(),App.pet.playCheeringAnimationIfTrue(App.pet.hasMoodlet("amused"),()=>{App.setScene(App.scene.home),App.toggleGameplayControls(!0),onEndFn?.()}),otherPet&&App.drawer.removeObject(otherPet),App.pet.speedOverride=!1},Pet.scriptedEventDrivers.playing.bind({pet:App.pet}))}static async dogWashingGame(){App.closeAllDisplays(),App.petDefinition.checkWant(!0,App.constants.WANT_TYPES.minigame),App.sendAnalytics("minigame_dog_washing"),App.setScene(App.scene.animalBathroom),App.toggleGameplayControls(!1),App.pet.stopMove(),App.pet.x="35%",App.pet.y="82%",App.pet.inverted=!0,App.pet.triggerScriptedState("idle_side",App.INF,null,!0);let remainingTime=10,score=0;const screen=App.displayEmpty();screen.style.background="transparent",screen.innerHTML=`\n            <div class="mini-game-ui flex align-center justify-between">\n                <div class="flex align-center">\n                    <i style="margin-right: 4px;" class="fa-solid fa-stopwatch icon"></i>\n                    <div id="timeRemaining">\n                        <span class="opacity-half">${remainingTime}</span>\n                    </div>\n                </div>\n                <div class="flex align-center">\n                    <i style="margin-right: 4px;" class="fa-solid fa-hands-wash icon"></i>\n                    <div id="score">${score}</div>\n                </div>\n            </div>\n            <button style="width: 64px; height: 64px" class="dog-washing-button">\n                <i class="fa-solid fa-hands-wash fa-2x"></i>\n            </button>\n        `;const washActionButton=screen.querySelector(".dog-washing-button"),repositionAction=()=>{const bounds={width:washActionButton.parentElement.clientWidth-64-2,height:washActionButton.parentElement.clientHeight-64-2},position_x=random(0,bounds.width),position_y=random(0,bounds.height);washActionButton.style.top=`${position_x}px`,washActionButton.style.left=`${position_y}px`};repositionAction();let timerFn;const animal=new Animal(App.getRandomAnimalDef("dog"));animal.triggerScriptedState("sitting",App.INF,null,!0),animal.y="82%",animal.x="65%";const advanceProgress=()=>{timerFn||(timerFn=setInterval(()=>{if(remainingTime--,remainingTime<=0)return remainingTime=0,clearInterval(timerFn),void(()=>{screen.close(),animal.removeObject(),App.pet.y="100%";const moneyWon=Math.floor(1.7*score),hasWon=score>18;hasWon&&App.definitions.achievements.perfect_minigame_petgroom_win_x_times.advance(),Activities.task_winMoneyFromArcade({amount:moneyWon,hasWon:hasWon,happiness:1.2*score})})();screen.querySelector("#timeRemaining").textContent=remainingTime},1e3),screen.querySelector("#timeRemaining").textContent=remainingTime);new Object2d({img:"resources/img/misc/foam_single.png",x:animal.x-6+random(-4,4),y:animal.y-18+random(-4,4),scale:.1*random(5,10),opacity:1,z:10,onDraw:me=>{Object2d.animations.flip(me),Object2d.animations.bob(me),Object2d.animations.pulseScale(me,.1,.01),me.scale-=5e-4*App.deltaTime,me.opacity-=5e-4*App.deltaTime,me.opacity<=0&&me.removeObject()}});score++,screen.querySelector("#score").textContent=score};washActionButton.onclick=()=>{repositionAction(),advanceProgress()}}static async plantMatchingGame(){App.petDefinition.checkWant(!0,App.constants.WANT_TYPES.minigame),App.sendAnalytics("minigame_plant_matching");const getRandomPlant=()=>randomFromArray(Object.keys(App.definitions.plant)),appendNonRepeatedPlant=(list=[])=>{let newPlant;for(;newPlant=getRandomPlant(),list.includes(newPlant););return[...list,newPlant]},getListOfNonRepeatedPlants=(list=[],length=4)=>{let newList=[...list];for(let i=0;i<length;i++)newList=appendNonRepeatedPlant(newList);return newList};App.closeAllDisplays(),App.setScene(App.scene.arcade),App.toggleGameplayControls(!1),App.pet.stopMove(),App.pet.x="50%",App.pet.triggerScriptedState("idle",App.INF,null,!0);const targetList=getListOfNonRepeatedPlants([],4),selectionLists=targetList.map(item=>shuffleArray(getListOfNonRepeatedPlants([item],3))),mainListUI=App.display2xGrid(targetList.map((name,index)=>({name:`\n                ${Plant.getCSprite(name,Plant.AGE.grown,"x2 blink")}\n                <span class="absolute-fullscreen m">${index+1}</span>\n            `,class:"disabled"})));await App.wait(4e3),mainListUI.close(),App.displayPopup("Wait...",1e3),await App.wait(1e3),App.displayPopup("Go!",1e3),await App.wait(1e3);const userSelectedList=[],checkIndex=(name,index)=>targetList[index]===name;selectionLists.slice().reverse().forEach((list,index)=>{const currentList=App.display2xGrid(list.map(name=>({name:Plant.getCSprite(name,Plant.AGE.grown,"x2"),onclick:()=>{(async name=>{userSelectedList.push(name);const correctChoices=userSelectedList.reduce((sum,current,currentIndex)=>checkIndex(current,currentIndex)?sum+1:sum,0),latestIndex=userSelectedList.length-1,isCorrect=checkIndex(name,latestIndex);if(isCorrect&&setTimeout(()=>App.playSound("resources/sounds/ui_click_03.ogg",!0)),App.displayPopup(isCorrect?`Correct ${App.getIcon("check")}`:`Incorrect ${App.getIcon("times")}`,1e3),await App.wait(1e3),userSelectedList.length===targetList.length){App.displayPopup(`${correctChoices}/${targetList.length}`,3e3),await App.wait(2e3),App.closeAllDisplays(),correctChoices===targetList.length&&App.definitions.achievements.perfect_minigame_cropmatch_win_x_times.advance();const moneyWon=Math.max(25*(correctChoices-1),0);Activities.task_winMoneyFromArcade({amount:moneyWon,happiness:moneyWon/5,hasWon:Boolean(moneyWon)})}})(name)}})));UI.create({componentType:"div",className:"absolute-fullscreen pointer-events-none flex-container",parent:currentList,children:[{textContent:Math.abs(index+1-targetList.length)+1,className:"surface-stylized inner-padding"}]})})}static barTimingGame(){App.closeAllDisplays(),App.toggleGameplayControls(!1),App.petDefinition.checkWant(!0,App.constants.WANT_TYPES.minigame),App.sendAnalytics("minigame_bar_timing"),App.setScene(App.scene.arcade_game01);let screen=App.displayEmpty();screen.innerHTML=`\n        <div class="flex-container flex-row-down height-100p" style="background: url(${App.scene.arcade_game01.image});background-size: contain;image-rendering: pixelated;">\n            <div class="timing-bar-container">\n                <div class="timing-bar-rod"></div>\n                <div class="timing-bar-rod"></div>\n                <div class="timing-bar-rod"></div>\n                <div class=timing-bar-cursor></div>\n            </div>\n        </div>\n        `;const cursor=screen.querySelector(".timing-bar-cursor");let moneyWon=0,round=0,roundsWin=0,cursorSpeed=.19,cursorCurrentPos=0,reset=cursorSpeedAdd=>{cursorCurrentPos=0,cursor.style.opacity=1};reset(),App.onDraw=()=>{cursorCurrentPos+=cursorSpeed*App.deltaTime,(cursorCurrentPos>=98||cursorCurrentPos<=0)&&(cursorSpeed*=-1,cursorCurrentPos=clamp(cursorCurrentPos,0,100),App.playSound("resources/sounds/ui_click_04.ogg",!0)),cursor.style.left=`${cursorCurrentPos}%`},screen.onclick=()=>{0!=cursorSpeed&&(cursorSpeed=0,cursor.style.opacity=.3,cursorCurrentPos>=90?(App.playSound("resources/sounds/ui_click_03.ogg",!0),App.vibrate(80),moneyWon+=20,roundsWin++):cursorCurrentPos>=70?(App.playSound("resources/sounds/ui_click_01.ogg",!0),moneyWon+=3):(App.playSound("resources/sounds/ui_click_01.ogg",!0),moneyWon-=5,moneyWon=clamp(moneyWon,0,999)),round++,3===round?setTimeout(()=>{screen.close(),App.onDraw=null,3===roundsWin&&App.definitions.achievements.perfect_minigame_rodrush_win_x_times.advance(),Activities.task_winMoneyFromArcade({amount:moneyWon,happiness:10*roundsWin,hasWon:roundsWin>=2})},500):setTimeout(()=>{reset(),cursorSpeed=1===round?.27:.37},500))}}static fallingStuffGame(){App.closeAllDisplays(),App.setScene(App.scene.park),App.toggleGameplayControls(!1),App.petDefinition.checkWant(!0,App.constants.WANT_TYPES.minigame),App.sendAnalytics("minigame_falling_stuff"),App.mouse.x=null,App.pet.speedOverride=.07,App.pet.x="50%",App.pet.stopMove(),App.pet.triggerScriptedState("idle",99999999,0,!0,null,pet=>{if(null===App.mouse.x)return;const center=App.mouse.x-pet.spritesheet.cellSize/2;if(pet.x!=center){const diff=pet.x-center;pet.inverted=!(diff>0),pet.targetX=center,Math.abs(diff)>.5&&pet.setState("moving")}else pet.setState("idle_side")});let lives=2,moneyWon=0,nextSpawnMs=0,projectileSpeed=.05,spawnDelay=1250;const petHeight=80-App.pet.spritesheet.cellSize/1.2,spawnerObject=new Object2d({x:-999,y:-999,onDraw:()=>{if(App.lastTime>nextSpawnMs){nextSpawnMs=App.lastTime+spawnDelay,projectileSpeed+=.0018,projectileSpeed>.15&&(projectileSpeed=.15),spawnDelay-=20,spawnDelay<800&&(spawnDelay=800);const xPercentage=randomFromArray(["10%","37%","63%","90%"]),isCurrentFaulty=1==random(0,3);new Object2d({parent:spawnerObject,img:isCurrentFaulty?"resources/img/misc/falling_poop.png":"resources/img/misc/heart_particle_01.png",y:-20,x:xPercentage,rotation:random(0,180),z:6,width:15,height:13,speed:projectileSpeed,onDraw:me=>{const xCenter=me.x-me.width/2;me.y+=me.speed*App.deltaTime,me.rotation+=me.speed*App.deltaTime,me.y>petHeight&&me.y<80&&xCenter>App.pet.x-16&&xCenter<App.pet.x+16&&(spawnSmoke(xCenter,me.y),me.removeObject(),me.setImg("resources/img/misc/heart_particle_02.png"),score(isCurrentFaulty)),me.y>90&&me.removeObject()}})}}}),spawnSmoke=(x,y)=>{new Object2d({img:"resources/img/misc/foam_single.png",x:x,y:y,z:6,opacity:1,scale:1.2,onDraw:me=>{me.rotation+=.1*App.deltaTime,me.opacity-=.001*App.deltaTime,me.scale-=.001*App.deltaTime,me.y-=.01*App.deltaTime,(me.opacity<=.1||me.scale<=.1)&&me.removeObject()}})},screen=UI.empty();document.querySelector(".screen-wrapper").appendChild(screen),screen.innerHTML=`\n        <div class="width-full" style="position: absolute; bottom: 0; left: 0;">\n            <div class="flex-container" style="justify-content: space-between; padding: 4px">\n                <div class="flex-container mini-game-ui">\n                    $\n                    <div id="moneyWon">${moneyWon}</div>\n                </div>\n                <div class="flex-container">\n                    <div id="lives">${lives}</div>\n                </div>\n            </div>\n        </div>\n        `;const uiMoneyWon=screen.querySelector("#moneyWon"),uiLives=screen.querySelector("#lives"),updateUI=()=>{uiMoneyWon.textContent=moneyWon,uiLives.innerHTML=new Array(lives).fill("").map(()=>'<img src="resources/img/misc/heart_particle_01.png"></img>').join(" ")};updateUI();const score=faulty=>{faulty?(App.playSound("resources/sounds/sad.ogg",!0),lives--,0==lives&&(lives=0,screen.remove(),spawnerObject.removeObject(),moneyWon>=App.definitions.achievements.perfect_minigame_catch_win_x_gold.required&&App.definitions.achievements.perfect_minigame_catch_win_x_gold.advance(),Activities.task_winMoneyFromArcade({amount:moneyWon,hasWon:moneyWon>30,happiness:moneyWon/6}))):(App.playSound("resources/sounds/cute.ogg",!0),moneyWon+=random(1,2)),updateUI()}}static opponentMimicGame(){App.closeAllDisplays(),App.setScene(App.scene.arcade),App.toggleGameplayControls(!1),App.petDefinition.checkWant(!0,App.constants.WANT_TYPES.minigame),App.sendAnalytics("minigame_mimic");const opponentPetDef=new PetDefinition({name:"park_game_npc",sprite:"resources/img/character/chara_175b.png"}),opponentPet=new Pet(opponentPetDef,{x:"70%"});let playedRounds=0,roundsWon=0;const reset=()=>{if(playedRounds>=3){opponentPet.removeObject(),App.setScene(App.scene.arcade_game01);const moneyWon=roundsWon*random(20,30);return 3===roundsWon&&App.definitions.achievements.perfect_minigame_mimic_win_x_times.advance(),void Activities.task_winMoneyFromArcade({amount:moneyWon,happiness:15*roundsWon,hasWon:0!==roundsWon})}opponentPet.stopMove(),opponentPet.triggerScriptedState("idle",App.INF,null,!0),opponentPet.x="70%",opponentPet.inverted=!0,App.pet.x="30%",App.pet.inverted=!1,App.pet.stopMove(),App.pet.triggerScriptedState("idle",App.INF,null,!0),setTimeout(()=>{const screen=App.displayEmpty(),imgPath="resources/img/ui/";screen.innerHTML=`\n                <div class="flex-container flex-dir-col height-100p" style="background: var(--background-c)">\n                    <div class="solid-surface-stylized inner-padding b-radius-10 relative">\n                        <div class="surface-stylized" style="padding: 0px 10px;position: absolute;top: -20px;left: 0px;">\n                            ${playedRounds+1}/3\n                        </div>\n                        Which direction will your opponent turn?\n                    </div>\n                    <div class="mimic-game__btn-container">\n                        <button id="left" class="generic-btn stylized"> <img src="${imgPath}facing_left.png"></img> </button>\n                        <button id="center" class="generic-btn stylized"> <img src="${imgPath}facing_center.png"></img> </button>\n                        <button id="right" class="generic-btn stylized"> <img src="${imgPath}facing_right.png"></img> </button>\n                    </div>\n                </div>\n                `,["left","center","right"].forEach(dir=>{screen.querySelector(`#${dir}`).onclick=()=>{setPredictedDirection(dir),screen.close()}})},800)};reset();const deriveStateFromDirection=dir=>{switch(dir){case"center":return{state:"idle",inverted:!1};case"right":return{state:"idle_side",inverted:!0};case"left":return{state:"idle_side",inverted:!1}}},setPredictedDirection=dir=>{const randomDir=randomFromArray(["left","center","right"]);setTimeout(()=>{const opponentState=deriveStateFromDirection(randomDir);opponentPet.setState(opponentState.state),opponentPet.inverted=opponentState.inverted;const playerState=deriveStateFromDirection(dir);App.pet.setState(playerState.state),App.pet.inverted=playerState.inverted,App.playSound("resources/sounds/task_complete.ogg",!0),setTimeout(()=>{playedRounds++,randomDir===dir?(App.pet.setState("cheering"),opponentPet.setState("angry"),roundsWon++):(App.pet.setState("angry"),opponentPet.setState("cheering")),setTimeout(reset,1e3)},1500)},1e3)};return!1}static parkRngGame(){App.closeAllDisplays(),App.setScene(App.scene.park),App.toggleGameplayControls(!1),App.petDefinition.checkWant(!0,App.constants.WANT_TYPES.minigame),App.sendAnalytics("minigame_park_rng");const randomPetRef=new PetDefinition({name:"park_game_npc",sprite:"resources/img/character/chara_175b.png"}),randomPet=new Pet(randomPetRef);return randomPet.stopMove(),randomPet.triggerScriptedState("eating",5e3,null,!0),randomPet.x=20,randomPet.inverted=!0,App.pet.x=80-App.pet.spritesheet.cellSize,App.pet.inverted=!1,App.pet.stopMove(),App.pet.triggerScriptedState("eating",5e3,null,!0,()=>{if(App.drawer.removeObject(randomPet),App.pet.x="50%",Math.random()>.5){let winningGold=25;App.pet.stats.gold+=winningGold,App.pet.stats.current_fun+=35,App.pet.playCheeringAnimation(()=>{App.displayPopup(`${App.petDefinition.name} won $${winningGold}`),App.toggleGameplayControls(!0),App.setScene(App.scene.home),App.handlers.open_game_list()})}else App.pet.playAngryAnimation(()=>{App.displayPopup(`${App.petDefinition.name} lost!`),App.pet.stats.current_fun-=15,App.toggleGameplayControls(!0),App.setScene(App.scene.home),App.handlers.open_game_list()})}),!1}static async trickOrTreatGame(onEndCallback){App.closeAllDisplays(),App.setScene(App.scene.devil_town_exterior);const backgroundMusic=App.playAdvancedSound({src:"resources/sounds/trick_or_treat_bm_01.mp3",loop:!0,volume:.4}),currencyIcon=App.getFoodCSprite(App.definitions.food[App.constants.UNDERWORLD_TREAT_CURRENCY]?.sprite);let activeSpeed=2.5,globalOffset=0,lastGlobalOffsetLooped=App.INF,globalSpawnOffset=App.drawer.bounds.width,spawnTicks=0,lives=3,score=0;const screen=UI.empty();document.querySelector(".screen-wrapper").appendChild(screen),screen.innerHTML=`\n        <div class="width-full pointer-events-none" style="position: absolute; top: 0; left: 0;">\n            <div class="flex-container" style="justify-content: space-between; padding: 4px">\n                <div class="flex-container flex-gap-05 mini-game-ui">\n                    ${currencyIcon}\n                    <div id="score">${score}</div>\n                </div>\n                <div class="flex-container">\n                    <div id="lives">${lives}</div>\n                </div>\n            </div>\n        </div>\n        `;const uiScore=screen.querySelector("#score"),uiLives=screen.querySelector("#lives"),updateUI=()=>{uiScore.textContent=score,uiLives.innerHTML=new Array(lives).fill("").map(()=>'<img src="resources/img/misc/heart_particle_01.png"></img>').join(" ")};updateUI();const sceneParent=new Object2d({});let jumpCount=0,groundPositionY=!1;App.toggleGameplayControls(!1,()=>{!1===groundPositionY&&(groundPositionY=App.pet.y);++jumpCount<=2&&(()=>{App.pet.playSound("resources/sounds/jump.ogg",!0);let velocity=.31;App.pet.triggerScriptedState("talking",App.INF,0,!0,()=>{App.pet.y=groundPositionY,jumpCount=0},()=>{velocity-=.001*App.deltaTime,App.pet.y-=velocity*App.deltaTime,App.pet.y>=groundPositionY&&(App.pet.stopScriptedState(),App.pet.triggerScriptedState("idle_side",App.INF,!1,!0))})})()});sceneParent.onDraw=()=>{activeSpeed+=65e-6*App.deltaTime,activeSpeed=clamp(activeSpeed,0,6),globalOffset+=.025*activeSpeed*App.deltaTime,jumpCount||App.pet.setState(activeSpeed?"moving":"idle_side");const globalOffsetLooped=globalOffset%App.drawer.bounds.width;globalOffsetLooped<lastGlobalOffsetLooped&&spawnEntities(),lastGlobalOffsetLooped=globalOffsetLooped};const spawnEntities=(xOffset=globalOffset)=>{spawnTicks++;const moverFn=(me,moveSpeed=1)=>{void 0===me._xOffset&&(me._xOffset=me.x+(App.drawer.bounds.width/moveSpeed-App.drawer.bounds.width)),me.x=(globalOffset-xOffset-me._xOffset)*moveSpeed,me.x>=2*App.drawer.bounds.width&&me?.removeObject()},spawnImpactEffect=(color={r:0,g:255,b:0})=>{new Object2d({...App.drawer.bounds,solidColor:color,x:0,y:0,opacity:.6,composite:"additive",z:999,onDraw:me=>{me.opacity-=.0015*App.deltaTime,me.opacity<=0&&me.removeObject()}})},progress=isScoring=>{isScoring?(score++,spawnImpactEffect({r:0,g:255,b:0}),App.playSound("resources/sounds/cute.ogg",!0)):(lives--,spawnImpactEffect({r:255,g:0,b:0}),App.playSound("resources/sounds/sad.ogg",!0)),updateUI(),lives<=0&&(async()=>{screen.remove(),App.pet.stopScriptedState(),sceneParent.onDraw=void 0,App.toggleGameplayControls(!1),backgroundMusic.stop(),App.addNumToObject(App.pet.inventory.food,App.constants.UNDERWORLD_TREAT_CURRENCY,score),App.pet.triggerScriptedState("idle",App.INF,0,!0),App.pet.x="50%",App.pet.y="100%";const msg=App.displayMessageBubble(`${currencyIcon} x${score}`),onEnd=()=>{App.toggleGameplayControls(),sceneParent.removeObject(),msg.close(),onEndCallback?.()};score>=5?App.pet.playCheeringAnimation(onEnd):App.pet.playUncomfortableAnimation(onEnd)})()};for(let i=0;i<1;i++){const tree=new Object2d({parent:sceneParent,img:"resources/img/misc/devil_tree_01.png",x:i*(App.drawer.bounds.width/1)+random(-4,4)+globalSpawnOffset,y:random(10,60),z:-.1,inverted:!!random(0,1),onDraw:()=>moverFn(tree,.8)})}for(let i=0;i<1;i++){const tree=new Object2d({parent:sceneParent,img:"resources/img/misc/devil_tree_01.png",x:i*(App.drawer.bounds.width/1)+random(-32,32)+globalSpawnOffset,y:random(70,80),z:App.pet.z+1,inverted:!!random(0,1),onDraw:()=>moverFn(tree,1.2)})}if(spawnTicks>5&&spawnTicks%4==0){return void new Object2d({parent:sceneParent,img:"resources/img/misc/bat_01.png",x:App.drawer.bounds.width/1+32+globalSpawnOffset,y:`${randomFromArray([20,70])}%`,z:App.pet.z+.1,onDraw:me=>{isNaN(me.y)||Object2d.animations.bob(me,.01),moverFn(me,1),me.isColliding(App.pet.getBoundingBox(12,4))&&(me.removeObject(),progress(!1))}}).showOutline("red")}if(spawnTicks%3==0){new Object2d({parent:sceneParent,img:App.constants.FOOD_SPRITESHEET,spritesheet:{...App.constants.FOOD_SPRITESHEET_DIMENSIONS,cellNumber:App.definitions.food[App.constants.UNDERWORLD_TREAT_CURRENCY].sprite},x:App.drawer.bounds.width/1+globalSpawnOffset,y:`${randomFromArray([20,70])}%`,z:App.pet.z-.1,onDraw:me=>{isNaN(me.y)||Object2d.animations.bob(me),moverFn(me,1),me.isColliding(App.pet.getBoundingBox())&&(me.removeObject(),progress(!0))}}).showOutline()}};spawnEntities(-1*App.drawer.bounds.width),spawnEntities(-2*App.drawer.bounds.width);new Array(2).fill(!0).map((_,i)=>new Object2d({parent:sceneParent,img:"resources/img/misc/devil_walkway_01.png",x:0,y:0,z:0,onDraw:me=>{me.x=globalOffset%App.drawer.bounds.width+-i*App.drawer.bounds.width}}));App.pet.stopMove(),App.pet.triggerScriptedState("idle_side",App.INF,!1,!0),App.pet.inverted=!1,App.pet.x="80%"}static async school_ExpressionGame({onEndFn:onEndFn,maxRounds:maxRounds=3}={}){App.closeAllDisplays(),App.setScene(App.scene.music_classroom),App.pet.stopMove(),App.pet.triggerScriptedState("idle",App.INF,0,!0),App.sendAnalytics("school_minigame_expression"),App.toggleGameplayControls(!1),App.pet.x="50%",App.pet.y="36%";const screen=UI.empty();document.querySelector(".screen-wrapper").appendChild(screen),screen.innerHTML='\n        <div class="flex flex-dir-col justify-between height-100p width-full" style="position: absolute; top: 0; left: 0;">\n            <div class="mini-game-ui flex align-center justify-between">\n                <div class="flex align-center">\n                    <i style="margin-right: 4px;" class="fa-solid fa-stopwatch icon"></i>\n                    <div id="round">\n                        <span class="opacity-half">0</span>\n                    </div>\n                </div>\n                <div class="flex align-center">\n                    <i style="margin-right: 4px;" class="fa-solid fa-star icon"></i>\n                    <div id="score">0</div>\n                </div>\n            </div>\n            <div class="simon-says pointer-events-none">\n                <div id="green" class="simon-says-button"></div>\n                <div id="red" class="simon-says-button"></div>\n                <div id="yellow" class="simon-says-button"></div>\n                <div id="blue" class="simon-says-button"></div>\n                <div class="simon-says-indicator"></div>\n            </div>\n        </div>\n        ';let playerInputBuffer=[],round=0,wonRounds=0;const container=screen.querySelector(".simon-says"),buttons=screen.querySelectorAll("#green, #red, #yellow, #blue"),[green,red,yellow,blue]=buttons;buttons.forEach((button,index)=>{button.playSound=()=>App.playSound(`resources/sounds/note_${index+1}.mp3`,!0),button.onclick=()=>{setTimeout(()=>button.playSound()),playerInputBuffer.push(button)}});const updateUI=()=>{screen.querySelector("#round").textContent=`(${Math.max(round,1)}/${maxRounds})`,screen.querySelector("#score").textContent=wonRounds};updateUI();const initSequence=async(turns=3)=>{round++,updateUI(),container.classList.add("pointer-events-none");const sequence=new Array(turns).fill(null).map(()=>randomFromArray([...buttons]));playerInputBuffer=[];for(let button of sequence)button.classList.add("active"),button.playSound(),await App.wait(500),button.classList.remove("active"),await App.wait(500);container.classList.remove("pointer-events-none");const hasWon=await new Promise(resolve=>{const interval=setInterval(()=>{if(!playerInputBuffer.length)return;const playerInputLastIndex=playerInputBuffer.length-1;playerInputBuffer.at(playerInputLastIndex)!==sequence.at(playerInputLastIndex)?(resolve(!1),clearInterval(interval)):playerInputBuffer.length===sequence.length&&(resolve(!0),clearInterval(interval))},16)});container.classList.add("pointer-events-none"),hasWon?(container.classList.add("win"),wonRounds++,updateUI()):container.classList.add("lose"),setTimeout(()=>{round<maxRounds&&(container.classList.remove("win"),container.classList.remove("lose")),setTimeout(()=>{round<maxRounds?initSequence(turns+1):(screen.remove(),App.pet.y="100%",onEndFn?.(wonRounds),App.toggleGameplayControls(!0),Activities.task_winSkillPointFromSchool({amount:wonRounds,hasWon:wonRounds>=2,icon:App.getIcon("special:expression")}))},1e3)},1e3)};setTimeout(()=>{initSequence()},1e3)}static async school_ExpressionGameX2(){App.closeAllDisplays(),App.setScene(App.scene.music_classroom),App.pet.stopMove(),App.pet.triggerScriptedState("idle",App.INF,0,!0);let lastSpawnTime=0;App.toggleGameplayControls(!1,()=>{});const otherPet=new Pet(App.getRandomPetDef(App.petDefinition.lifeStage));otherPet.triggerScriptedState("idle",App.INF,0,!0);App.registerOnDrawEvent(()=>{App.time>lastSpawnTime+800&&(lastSpawnTime=App.time,((x="25%")=>{const mainPetBoundingBox=App.pet.getBoundingBox(),height=random(6,32);new Object2d({solidColor:{r:255,g:0,b:150},width:6,height:height,z:App.constants.ACTIVE_PET_Z-.1,x:x,y:App.drawer.bounds.height+height,onDraw:me=>{if("string"==typeof me.y)return;if(me.y-=.1*App.deltaTime,me.y<-height)return void me.removeObject();const blockTop=me.y,petBottom=mainPetBoundingBox.y+mainPetBoundingBox.height;if(blockTop<=petBottom){const overlap=petBottom-blockTop;App.mouse.isDown?me.solidColor={r:0,g:255,b:55}:me.solidColor={r:255,g:0,b:0},me.height=Math.max(0,me.height-overlap),me.y+=overlap}}})})(randomFromArray(["25%","75%"]))),App.pet.setState(App.mouse.isDown?"jumping":"idle")});App.pet.x="25%",App.pet.y="36%",otherPet.x="75%",otherPet.y="36%"}static async school_ExpressionGameX({onEndFn:onEndFn}={}){App.closeAllDisplays(),App.setScene(App.scene.classroom),App.pet.x="75%",App.pet.y="100%",App.pet.triggerScriptedState("idle",App.INF,0,!0),App.toggleGameplayControls(!1);const screen=UI.empty();document.querySelector(".screen-wrapper").appendChild(screen),screen.innerHTML='\n        <div class="flex flex-dir-col justify-between height-100p width-full" style="position: absolute; top: 0; left: 0;">\n            <div class="mini-game-ui flex align-center justify-between">\n                <div class="flex align-center">\n                    <i style="margin-right: 4px;" class="fa-solid fa-stopwatch icon"></i>\n                    <div id="time-left">\n                        <span class="opacity-half">30</span>\n                    </div>\n                </div>\n                <div class="flex align-center">\n                    <div id="score">0</div>\n                </div>\n            </div>\n            <div class="mix-colors-container">\n                <button id="reset" class="generic-btn stylized justify-center">\n                    <div class="color" style="background: white;"></div>\n                </button>\n                <button id="red" class="generic-btn stylized justify-center">\n                    <div class="color" style="background: red;"></div>\n                </button>\n                <button id="yellow" class="generic-btn stylized justify-center">\n                    <div class="color" style="background: yellow;"></div>\n                </button>\n                <button id="blue" class="generic-btn stylized justify-center">\n                    <div class="color" style="background: blue;"></div>\n                </button>\n            </div>\n        </div>\n        ';const playerColorTaps={red:0,yellow:0,blue:0},COLORS_red={r:255,g:0,b:0},COLORS_blue={r:0,g:0,b:255},COLORS_yellow={r:255,g:255,b:0},targetPainting=new Object2d({solidColor:{r:random(0,255),g:random(0,255),b:random(0,255)},width:24,height:24,x:"25%",y:"50%"}),playerPainting=new Object2d({solidColor:{r:255,g:255,b:255},width:24,height:24,x:"75%",y:"50%",onDraw:me=>{me.solidColor=(taps=>{let total=taps.red+taps.blue+taps.yellow;if(0===total)return{r:255,g:255,b:255};let r=(COLORS_red.r*taps.red+COLORS_blue.r*taps.blue+COLORS_yellow.r*taps.yellow)/total,g=(COLORS_red.g*taps.red+COLORS_blue.g*taps.blue+COLORS_yellow.g*taps.yellow)/total,b=(COLORS_red.b*taps.red+COLORS_blue.b*taps.blue+COLORS_yellow.b*taps.yellow)/total;return{r:Math.round(r),g:Math.round(g),b:Math.round(b)}})(playerColorTaps)}}),[resetButton,redButton,yellowButton,blueButton]=(setInterval(()=>{var c1,c2;screen.querySelector("#score").textContent=(c1=playerPainting.solidColor,c2=targetPainting.solidColor,Math.sqrt(Math.pow(c1.r-c2.r,2)+Math.pow(c1.g-c2.g,2)+Math.pow(c1.b-c2.b,2))).toFixed(1)},100),screen.querySelectorAll("#reset, #red, #yellow, #blue"));redButton.onclick=()=>playerColorTaps.red++,yellowButton.onclick=()=>playerColorTaps.yellow++,blueButton.onclick=()=>playerColorTaps.blue++,resetButton.onclick=()=>{playerColorTaps.red=0,playerColorTaps.yellow=0,playerColorTaps.blue=0}}static async school_EnduranceGame({onEndFn:onEndFn}={}){let jumpingRope;App.closeAllDisplays(),App.setScene(App.scene.classroom),App.pet.stopMove(),App.pet.x="50%",App.pet.y="100%",App.pet.triggerScriptedState("idle",App.INF,0,!0),App.sendAnalytics("school_minigame_endurance");let currentScore=0,canScore=!1,timeLeft=12,firstJump=!1;const screen=UI.empty();document.querySelector(".screen-wrapper").appendChild(screen),screen.innerHTML=`\n        <div class="width-full pointer-events-none" style="position: absolute; bottom: 0; left: 0;">\n            <div class="mini-game-ui flex align-center justify-between">\n                <div class="flex align-center">\n                    <i style="margin-right: 4px;" class="fa-solid fa-stopwatch icon"></i>\n                    <div id="time-left">\n                        <span class="opacity-half">${timeLeft}</span>\n                    </div>\n                </div>\n                <div class="flex align-center">\n                    <div id="score">${currentScore}</div>\n                </div>\n            </div>\n        </div>\n        `;const checkProgress=isScoring=>{if(isScoring&&(firstJump=!0,canScore&&(currentScore++,setTimeout(()=>App.playSound("resources/sounds/ui_click_03.ogg",!0)),updateUI())),timeLeft<=0){App.toggleGameplayControls(!1),jumpingRope?.removeObject(),screen.remove(),App.pet.stopScriptedState(),App.pet.y="100%";const points=clamp(Math.floor(currentScore/3),0,3);onEndFn?.(points),Activities.task_winSkillPointFromSchool({amount:points,hasWon:points>1,icon:App.getIcon("special:endurance")})}};jumpingRope=new Object2d({img:"resources/img/misc/jumping_rope_01.png",x:0,y:0,z:App.pet.z+.1,spritesheet:{cellSize:App.drawer.bounds.width,cellNumber:1,rows:1,columns:4},onDraw:me=>{const previousAnimFrame=me.spritesheet.cellNumber;Object2d.animations.cycleThroughFrames(me,150,!0);const currentAnimFrame=me.spritesheet.cellNumber;1===currentAnimFrame?me.z=App.constants.ACTIVE_PET_Z+.1:currentAnimFrame>=me.spritesheet.rows*me.spritesheet.columns&&(me.z=App.constants.ACTIVE_PET_Z-.1),previousAnimFrame!==currentAnimFrame&&3===currentAnimFrame&&me.z>App.pet.z&&(App.pet.setState("jumping"),App.pet.filter="brightness(1.35)",canScore=!0,setTimeout(()=>{App.pet.filter="",canScore=!1,jumpingRope&&!jumpingRope.isRemoved&&App.pet.setState("idle")},150))}});const updateUI=()=>{screen.querySelector("#time-left").textContent=timeLeft,screen.querySelector("#score").textContent=currentScore};let timerFn=setInterval(()=>{firstJump&&(timeLeft-=1,timeLeft<=0&&(clearInterval(timerFn),checkProgress()),updateUI())},1e3);App.pet.isJumping=!1,App.toggleGameplayControls(!1,()=>{App.pet.jump(.28,!1,()=>{App.pet.triggerScriptedState("idle",App.INF,0,!0),App.pet.z=App.constants.ACTIVE_PET_Z}),App.pet.z=App.constants.ACTIVE_PET_Z+.2,checkProgress(!0)})}static async school_CardShuffleGame({activeCards:activeCards=2,maxCards:maxCards=12,onEndFn:onEndFn,swapDelay:swapDelay=400,maxSwaps:maxSwaps,maxAttempts:maxAttempts=4,skillIcon:skillIcon}={}){App.sendAnalytics("school_minigame_shuffle"),App.pet.triggerScriptedState("idle",App.INF,null,!0);const screen=App.displayEmpty();screen.innerHTML=`\n        <div class="height-100p school-logic-container">\n            <div class="mini-game-ui flex hidden">\n                <span id="counter">0</span>\n                <span>/${maxAttempts}</span>\n            </div>\n            <div class="cards-container">\n\n            </div>\n        </div>\n        `;const cardsContainer=screen.querySelector(".cards-container"),miniGameUI=screen.querySelector(".mini-game-ui"),counter=screen.querySelector(".mini-game-ui #counter");let cards,totalTurnedCards=0,correctCards=0;const handleCardSelect=card=>{if(!card.classList.contains("turning"))return;totalTurnedCards++,card.classList.remove("turning"),card.isTarget&&correctCards++,App.playSound(card.isTarget?"resources/sounds/ui_click_03.ogg":"resources/sounds/ui_click_01.ogg",!0);counter.textContent=totalTurnedCards,cardsContainer.classList.add("disabled"),setTimeout(()=>{cardsContainer.classList.remove("disabled")},350),setTimeout(()=>{correctCards===activeCards?(screen.close(),onEndFn?.(3),Activities.task_winSkillPointFromSchool({amount:3,hasWon:!0,icon:App.getIcon(skillIcon)})):totalTurnedCards>=maxAttempts&&(miniGameUI.classList.add("hidden"),cardsContainer.classList.add("disabled"),cards.forEach(card=>card.classList.remove("turning")),setTimeout(()=>{screen.close(),onEndFn?.(0),Activities.task_winSkillPointFromSchool({amount:0,hasWon:!1,icon:App.getIcon(skillIcon)})},2e3))},350)};let swappedIndex=2;const swapCards=(a,b)=>{const aLeft=a.style.left,aTop=a.style.top,bLeft=b.style.left,bTop=b.style.top;a.style.left=bLeft,a.style.top=bTop,b.style.left=aLeft,b.style.top=aTop,a.style.zIndex=swappedIndex,b.style.zIndex=++swappedIndex,App.playSound("resources/sounds/ui_click_04.ogg",!0)};cards=((activeAmount,maxAmount)=>{const randomPositions=new Array(maxAmount).fill(null).map((_,i)=>({index:i,weight:Math.random()})).sort((a,b)=>a.weight-b.weight).map(item=>item.index).slice(0,activeAmount),cards=[];for(let i=0;i<maxAmount;i++){const isTarget=randomPositions.includes(i),card=UI.ce({componentType:"div",className:"card flex flex-center disabled",parent:cardsContainer,innerHTML:isTarget?App.getIcon("star",!0):`<span class="opacity-third">${App.getIcon("poop",!0)}</span>`,isTarget:isTarget,onclick:()=>{handleCardSelect(card)}}),maxCols=4,gap=10,col=i%maxCols,row=Math.floor(i/maxCols);card.style.position="absolute",card.style.top=-100*(col+1)+"px",setTimeout(()=>card.style.top=6+row*(card.clientHeight+gap)+"px"),card.style.left=8+col*(card.clientWidth+gap)+"px",cards.push(card)}return cards})(activeCards,maxCards),await App.wait(3e3);for(let i=0;i<cards.length;i++){await App.wait(150);cards.at(i).classList.add("turning")}await App.wait(1e3);const scrambledCards=shuffleArray([...shuffleArray(cards).slice(0,maxSwaps??cards.length/1.5),cards.find(c=>c.isTarget)]);for(let i=0;i<scrambledCards.length;i++){const card=scrambledCards.at(i);let target;for(;target=randomFromArray(scrambledCards),target===card;);await App.wait(swapDelay),swapCards(card,target)}await App.wait(500),cards.forEach(card=>card.classList.remove("disabled")),miniGameUI.classList.remove("hidden")}static task_foam(middleFn,endFn){let foam=new Object2d({img:"resources/img/misc/foam_01.png",x:0,y:0,z:1001,onDraw:me=>{Object2d.animations.flip(me,400)}});setTimeout(()=>{foam.setImg("resources/img/misc/foam_02.png")},500),setTimeout(()=>{foam.setImg("resources/img/misc/foam_03.png")},1e3),setTimeout(()=>{foam.setImg("resources/img/misc/foam_04.png")},1500),setTimeout(()=>{middleFn&&middleFn()},2e3),setTimeout(()=>{foam.setImg("resources/img/misc/foam_03.png")},3e3),setTimeout(()=>{foam.setImg("resources/img/misc/foam_02.png")},3500),setTimeout(()=>{foam.setImg("resources/img/misc/foam_01.png")},4e3),setTimeout(()=>{App.drawer.removeObject(foam)},4500),setTimeout(()=>{endFn&&endFn()},5500)}static task_endWork(elapsedTime,moneyMade){let clampedMoneyMade=clamp(moneyMade,0,400);App.displayPopup(`${App.petDefinition.name} worked for ${elapsedTime} seconds`,2500,()=>{elapsedTime>10?App.pet.stats.gold+=clampedMoneyMade:clampedMoneyMade=0,App.pet.stats.current_fun-=elapsedTime/3.5,App.pet.stats.current_expression-=.5,App.pet.stats.current_logic+=3,App.displayConfirm(`${App.petDefinition.name} made $${clampedMoneyMade}`,[{name:"ok",onclick:()=>{App.setScene(App.scene.home),App.handlers.open_works_list()}}])}),App.toggleGameplayControls(!0)}static task_floatingHearts(num){Activities.task_floatingObjects(num,["resources/img/misc/heart_particle_01.png","resources/img/misc/heart_particle_02.png"])}static task_floatingObjects(num,textures,yRange=[105,115]){num||(num=random(1,4));for(let i=0;i<num;i++){let floatSpeed=.01*random(4,5),swayFloat=0,swaySpeed=.001*random(2,20);new Object2d({img:randomFromArray(textures),z:randomFromArray([0,100]),x:`${random(0,100)}%`,y:`${random(yRange[0],yRange[1])}%`}).onDraw=me=>{isNaN(me.y)||(me.y-=floatSpeed*App.deltaTime,swayFloat+=swaySpeed*App.deltaTime,me.x+=2*Math.sin(swayFloat),me.y<-16&&me.removeObject())}}}static task_nonSwayingFloatingObjects(num,textures,yRange=[105,115]){num||(num=random(1,4));for(let i=0;i<num;i++){const xPosition=i/num*100+random(-2,7);let floatSpeed=.01*random(5,6);new Object2d({img:randomFromArray(textures),z:randomFromArray([0,100]),x:`${xPosition}%`,y:`${random(yRange[0],yRange[1])}%`}).onDraw=me=>{isNaN(me.y)||(me.y-=floatSpeed*App.deltaTime,me.y<-16&&me.removeObject())}}}static task_handleLeavingAnimals(){App.animals.list?.forEach(a=>a?.handleStatsUpdate?.());const leavingAnimals=App.animals.list.filter(a=>a.stats.current_happiness<=0);leavingAnimals.length&&(App.displayList([{name:`\n                        these animals left because they were neglected:\n                        <br><br>\n                        ${leavingAnimals.map(animalDef=>`\n                            <span style="color: red;">\n                                ${animalDef.getFullCSprite()}${animalDef.name}    \n                            </span>\n                        `).join("<br>")}\n                    `,type:"text"},{name:"When animals lose all happiness, they leave. Take better care of them!",type:"info"}],null,"neglect!"),leavingAnimals.forEach(a=>{App.animals.list.splice(App.animals.list.indexOf(a),1)}),App.pet.stats.current_fun-=100,App.pet.stats.current_expression-=2)}static async task_winSkillPointFromSchool({amount:amount=0,hasWon:hasWon,npc:npc="resources/img/character/chara_175b.png",icon:icon}={}){App.closeAllDisplays(),App.setScene(App.scene.classroom),App.toggleGameplayControls(!1),App.pet.staticShadow=!1,hasWon&&Missions.done(Missions.TYPES.earn_school_points);const petMain=new TimelineDirector(App.pet),petClerk=new TimelineDirector(new Pet(new PetDefinition({name:"prize giver",sprite:npc})));petMain.setPosition({x:"75%"}),petMain.setState("idle"),petClerk.setPosition({x:"25%"}),petClerk.setState("idle"),await TimelineDirector.wait(500);const messageBubble=App.displayMessageBubble(`<span class="outlined-icon">${icon}</span>+${amount}`);await petMain.bob({maxCycles:1,animation:"shocked"}),hasWon?(setTimeout(()=>App.pet.playSound("resources/sounds/cheer_success.ogg",!0)),petMain.setState("cheering_with_icon"),petClerk.setState("cheering")):(setTimeout(()=>App.pet.playSound("resources/sounds/task_fail_01.ogg",!0)),petMain.setState("uncomfortable"),petClerk.setState("mild_uncomfortable"),App.pet.stats.current_discipline-=random(2,6)),await TimelineDirector.wait(3e3),petMain.release(),petClerk.remove(),App.setScene(App.scene.home),App.toggleGameplayControls(!0),UI.clearLastClicked(),messageBubble.close(),App.handlers.open_school_activity_list()}static async task_winMoneyFromArcade({amount:amount=0,happiness:happiness,hasWon:hasWon,npc:npc="resources/img/character/chara_175b.png"}={}){const moneyBag=new Object2d({img:"resources/img/misc/money_bag_01.png",x:"50%",y:"0%",width:24,height:24,opacity:amount?1:0,targetY:67,onDraw:me=>me.moveToTarget(.025)});App.toggleGameplayControls(!1),App.pet.staticShadow=!1,App.pet.stats.gold+=amount,App.pet.stats.current_fun+=happiness??amount/5,hasWon&&Missions.done(Missions.TYPES.win_game);const petMain=new TimelineDirector(App.pet),petClerk=new TimelineDirector(new Pet(new PetDefinition({name:"prize giver",sprite:npc})));petMain.setPosition({x:"75%"}),petMain.setState("idle"),petClerk.setPosition({x:"25%"}),petClerk.setState("idle"),await TimelineDirector.wait(1600);const messageBubble=App.displayMessageBubble(`$${amount}`);await petMain.bob({maxCycles:1,animation:"shocked"}),hasWon?(setTimeout(()=>App.pet.playSound("resources/sounds/cheer_success.ogg",!0)),petMain.setState("cheering_with_icon"),petClerk.setState("cheering")):(setTimeout(()=>App.pet.playSound("resources/sounds/task_fail_01.ogg",!0)),petMain.setState("uncomfortable"),petClerk.setState("mild_uncomfortable"),App.pet.stats.current_discipline-=random(2,8)),await TimelineDirector.wait(3e3),moneyBag.removeObject(),petMain.release(),petClerk.remove(),App.setScene(App.scene.home),App.toggleGameplayControls(!0),UI.clearLastClicked(),messageBubble.close(),App.handlers.open_game_list()}}class TimelineDirector{registeredDrawEvents=[];constructor(actor,config={}){this.actor=actor,this.actor.triggerScriptedState("idle",App.INF,!1,!0,config.onEnd,config.driverFn),this.actor.stopMove()}moveTo=({x:x,y:y,speed:speed=.15,endState:endState="idle",disableMoveAnimation:disableMoveAnimation})=>new Promise(resolve=>{if(!this.actor)return resolve();if(this.actor.scriptedEventDriverFn=me=>{disableMoveAnimation||me.setState(me.isMoving?"moving":endState),me.isMoving||(me.speedOverride=!1,resolve(),me.scriptedEventDriverFn=!1)},"string"==typeof x){const percent=parseFloat(x);x=App.drawer.getRelativePositionX(percent)-this.getSize()/2}this.actor.targetX=x,this.actor.targetY=y,this.actor.speedOverride=speed});setPosition=({x:x,y:y})=>{this.actor&&(x&&(this.actor.x=x),y&&(this.actor.y=y))};setState=state=>this.actor?.setState?.(state);lookAt=direction=>this.actor&&(this.actor.inverted=direction);release=()=>{this.actor.stopScriptedState(),this.actor=!1,this.registeredDrawEvents.forEach(e=>App.unregisterOnDrawEvent(e))};remove=()=>this.actor?.removeObject();getPosition=axis=>"y"===axis?this.actor?.y:this.actor?.x;getSize=()=>this.actor?.spritesheet.cellSize;bob=({speed:speed=.011,strength:strength=5,maxCycles:maxCycles=3,animation:animation="cheering",landAnimation:landAnimation,sound:sound}={})=>(landAnimation||(landAnimation=animation),new Promise(resolve=>{if(!this.actor)return resolve();const defaultY=this.actor.y,actor=this.actor;let animationFloat=0,currentCycles=0,cycleCounted=!1;const drawEvent=App.registerOnDrawEvent(()=>{actor||App.unregisterOnDrawEvent(drawEvent),animationFloat+=speed*App.deltaTime;const finalAnimationFloat=clamp(Math.sin(animationFloat),0,999);finalAnimationFloat>0?(cycleCounted=!1,actor.setState(animation)):(cycleCounted||(cycleCounted=!0,currentCycles++,sound&&App.playSound(sound,!0)),actor.setState(landAnimation),currentCycles>=maxCycles&&(actor.y=defaultY,App.unregisterOnDrawEvent(drawEvent),resolve())),actor.y=defaultY-finalAnimationFloat*strength});this.registeredDrawEvents.push(drawEvent)}));think=(...args)=>this.actor?.showThought(...args);resize=({target:target,speed:speed=.005,timeout:timeout=1e3}={})=>new Promise(resolve=>{const{actor:actor}=this;let drawEvent;const end=()=>{App.unregisterOnDrawEvent(drawEvent),actor.scale=target,drawEvent=null,resolve()};setTimeout(()=>{drawEvent&&end()},timeout),drawEvent=App.registerOnDrawEvent(()=>{actor.scale=lerp(actor.scale,target,speed*App.deltaTime),actor.scale.toFixed(2)===target&&end()})});fade=({target:target,speed:speed=.005,timeout:timeout=1e3,from:from=this.actor.opacity}={})=>{const defaultOpacity=this.actor.opacity||1;return this.actor.opacity=from,new Promise(resolve=>{const{actor:actor}=this;let drawEvent;const end=()=>{App.unregisterOnDrawEvent(drawEvent),actor.opacity=defaultOpacity,drawEvent=null,resolve()};setTimeout(()=>{drawEvent&&end()},timeout),drawEvent=App.registerOnDrawEvent(()=>{actor.opacity=lerp(actor.opacity||1,target,speed*App.deltaTime),actor.opacity.toFixed(2)===target&&end()})})};static wait=(...args)=>App.wait(...args)}