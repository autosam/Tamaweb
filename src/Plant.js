class Plant{isWatered=!1;growthDelay=8*App.constants.ONE_HOUR;wateredDuration=2*App.constants.ONE_HOUR;deathDuration=10*App.constants.ONE_HOUR;constructor(config){const{name:name,age:age=Plant.AGE.seedling,lastGrowthTime:lastGrowthTime=Date.now(),lastWatered:lastWatered=Date.now()-this.wateredDuration-1e3}=config;this.age=age,this.name=name,this.lastGrowthTime=lastGrowthTime;const defWateredDuration=this.getDefinition(name)?.wateredDuration;defWateredDuration&&(this.wateredDuration=1e3*defWateredDuration*60),this.lastWatered=lastWatered}checkForProgress(){const now=Date.now();App.isWeatherEffectActive()&&this.water(now);const{wateredDuration:wateredDuration,deathDuration:deathDuration,growthDelay:growthDelay}=this.getStatDurations();if(this.isWatered=now-this.lastWatered<wateredDuration,now>this.lastWatered+deathDuration+wateredDuration)this.age=Plant.AGE.dead;else if(![Plant.AGE.grown,Plant.AGE.dead].includes(this.age))for(;this.lastGrowthTime+growthDelay<now&&this.age!==Plant.AGE.grown;)this.lastGrowthTime+=growthDelay,this.age=clamp(this.age+1,Plant.AGE.seedling,Plant.AGE.grown)}getStatDurations(){let wateredDuration=this.wateredDuration;App.isGameplayBuffActive("increasedWateredDuration")&&(wateredDuration+=3*App.constants.ONE_HOUR);let deathDuration=this.deathDuration;App.isGameplayBuffActive("longerDeathDuration")&&(deathDuration+=8*App.constants.ONE_HOUR);let growthDelay=this.growthDelay;return App.isGameplayBuffActive("shorterGrowthDelay")&&(growthDelay-=4*App.constants.ONE_HOUR),{wateredDuration:wateredDuration,deathDuration:deathDuration,growthDelay:growthDelay}}water(now=Date.now()){this.lastWatered=now}get isDead(){return this.age===Plant.AGE.dead}createObject2d(patch){const plantDefinition=this.getDefinition();if(!plantDefinition)return;let nextPatchTick=-1;patch.onDraw=me=>{if(App.time<nextPatchTick)return;nextPatchTick=App.time+100;const target=this.isWatered?Plant.PATCH_IMG.wet:Plant.PATCH_IMG.normal;me.imageSrc.replace(location.href,"")!==target&&me.setImg(target)};const position={x:patch.x,y:patch.y-10},plant=new Object2d({parent:patch,image:App.preloadedResources[App.constants.PLANT_SPRITESHEET],spritesheet:{...App.constants.PLANT_SPRITESHEET_DIMENSIONS,cellNumber:plantDefinition.sprite+this.age},...position,onDraw:me=>{this.checkForProgress(),plant.spritesheet.cellNumber=plantDefinition.sprite+this.age,App.pet.setLocalZBasedOnSelf(plant)}}),statusIndicator=new Object2d({parent:plant,img:"resources/img/misc/no_water_01.png",y:position.y+18,x:position.x-7,z:App.constants.ACTIVE_PET_Z+.02,opacity:0,onDraw:me=>{this.isWatered&&(me.opacity=0),me.opacity=lerp(me.opacity,this.isWatered||this.isDead?0:1,.001*App.deltaTime)}});return this.position=position,{plant:plant,statusIndicator:statusIndicator}}getCSprite(){return App.getGenericCSprite(this.getDefinition().sprite+this.age,App.constants.PLANT_SPRITESHEET,App.constants.PLANT_SPRITESHEET_DIMENSIONS)}getObject(){}getDefinition(name){return Plant.getDefinitionByName(name||this.name)}_reset(){this.age=Plant.AGE.seedling,this.lastGrowthTime=Date.now(),this.lastWatered=Date.now()-this.wateredDuration}static getDefinitionByName(name){return App.definitions.plant[name]}static getCSprite(plantName,age=Plant.AGE.grown,className){return App.getGenericCSprite(Plant.getDefinitionByName(plantName)?.sprite+age,App.constants.PLANT_SPRITESHEET,App.constants.PLANT_SPRITESHEET_DIMENSIONS,className,`title="${plantName.toUpperCase()}"`)}static getPackCSprite(plantName,age,className){return`\n        <div>\n            <img src="resources/img/misc/seed_pack_01.png"></img>\n            ${Plant.getCSprite(plantName,Plant.AGE.grown,className)}\n        </div>\n        `}static AGE={seedling:0,tiny:1,grown:2,dead:3};static AGE_LABELS=Object.fromEntries(Object.entries(Plant.AGE).map(([key,value])=>[value,key]));static PATCH_IMG={normal:"resources/img/misc/garden_patch_01.png",wet:"resources/img/misc/garden_patch_01_wet.png"}}